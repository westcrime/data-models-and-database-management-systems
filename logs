CREATE SCHEMA
********* ЗАПРОС *********
CREATE TABLE Platforms 
(platform_id serial PRIMARY KEY NOT NULL,
 name VARCHAR ( 50 ) UNIQUE NOT NULL);
**************************

CREATE TABLE
             Список отношений
 Схема  |    Имя    |   Тип   | Владелец  
--------+-----------+---------+-----------
 public | platforms | таблица | westcrime
(1 строка)

********* ЗАПРОС *********
CREATE TABLE Publishers
(
    publisher_id SERIAL PRIMARY KEY NOT NULL,
    name VARCHAR(50) UNIQUE NOT NULL,
    description VARCHAR(500) UNIQUE NOT NULL
);
**************************

CREATE TABLE
********* ЗАПРОС *********
CREATE TABLE Categories
(
    category_id SERIAL PRIMARY KEY NOT NULL,
    name VARCHAR(50) UNIQUE NOT NULL
);
**************************

CREATE TABLE
********* ЗАПРОС *********
CREATE TABLE Roles 
(
    role_id SERIAL PRIMARY KEY NOT NULL,
    name VARCHAR(50) UNIQUE NOT NULL
);
**************************

CREATE TABLE
********* ЗАПРОС *********
CREATE TABLE Users 
(
    user_id SERIAL PRIMARY KEY NOT NULL,
    nickname VARCHAR(50) UNIQUE NOT NULL,
    password VARCHAR(50) UNIQUE NOT NULL,
    email VARCHAR(50) UNIQUE NOT NULL,
    role_id INT REFERENCES Roles(role_id),
    profile_pic_path VARCHAR(100) UNIQUE,
    balance DECIMAL NOT NULL
);
**************************

CREATE TABLE
********* ЗАПРОС *********
CREATE TABLE Games 
(
    game_id SERIAL PRIMARY KEY NOT NULL,
    name VARCHAR(50) UNIQUE NOT NULL,
    description VARCHAR(500) NOT NULL,
    publisher_id INT REFERENCES Publishers(publisher_id) NOT NULL,
    category_id INT REFERENCES Categories(category_id) NOT NULL,
    cost DECIMAL NOT NULL,
    picture_path VARCHAR(100) UNIQUE
);
**************************

CREATE TABLE
********* ЗАПРОС *********
CREATE TABLE Platforms_Games
(
    game_id INT REFERENCES Games(game_id) NOT NULL,
    platform_id INT REFERENCES Platforms(platform_id) NOT NULL
)

;
**************************

CREATE TABLE
********* ЗАПРОС *********
CREATE TABLE Wishlists
(
    game_id INT REFERENCES Games(game_id) NOT NULL,
    user_id INT REFERENCES Users(user_id) NOT NULL
);
**************************

CREATE TABLE
********* ЗАПРОС *********
CREATE TABLE Libraries
(
    game_id INT REFERENCES Games(game_id) NOT NULL,
    user_id INT REFERENCES Users(user_id) NOT NULL
);
**************************

CREATE TABLE
********* ЗАПРОС *********
CREATE TABLE User_logs 
(
    user_log_id SERIAL PRIMARY KEY NOT NULL,
    user_id INT REFERENCES Users(user_id) NOT NULL,
    date_of_event DATE NOT NULL,
    description VARCHAR(250) NOT NULL
);
**************************

CREATE TABLE
********* ЗАПРОС *********
CREATE TABLE Payments 
(
    payment_id SERIAL PRIMARY KEY NOT NULL,
    payment_date DATE NOT NULL,
    user_id INT REFERENCES Users(user_id) NOT NULL,
    description VARCHAR(250) NOT NULL,
    amount DECIMAL NOT NULL
);
**************************

CREATE TABLE
********* ЗАПРОС *********
CREATE TABLE Orders 
(
    order_id SERIAL PRIMARY KEY NOT NULL,
    user_id INT REFERENCES Users(user_id) NOT NULL,
    order_date DATE NOT NULL,
    status VARCHAR(50) NOT NULL,
    amount DECIMAL NOT NULL
);
**************************

CREATE TABLE
********* ЗАПРОС *********
CREATE TABLE Orders_Games
(
    game_id INT REFERENCES Games(game_id) NOT NULL,
    order_id INT REFERENCES Orders(order_id) NOT NULL
)
;
**************************

CREATE TABLE
********* ЗАПРОС *********
CREATE TABLE Reviews 
(
    review_id SERIAL PRIMARY KEY NOT NULL,
    user_id INT REFERENCES Users(user_id) NOT NULL,
    game_id INT REFERENCES Games(game_id) NOT NULL,
    rating INT NOT NULL,
    CHECK (rating BETWEEN 0 AND 5),
    description VARCHAR(500) NOT NULL
);
**************************

CREATE TABLE
                Список отношений
 Схема  |       Имя       |   Тип   | Владелец  
--------+-----------------+---------+-----------
 public | categories      | таблица | westcrime
 public | games           | таблица | westcrime
 public | libraries       | таблица | westcrime
 public | orders          | таблица | westcrime
 public | orders_games    | таблица | westcrime
 public | payments        | таблица | westcrime
 public | platforms       | таблица | westcrime
 public | platforms_games | таблица | westcrime
 public | publishers      | таблица | westcrime
 public | reviews         | таблица | westcrime
 public | roles           | таблица | westcrime
 public | user_logs       | таблица | westcrime
 public | users           | таблица | westcrime
 public | wishlists       | таблица | westcrime
(14 строк)

                Список отношений
 Схема  |       Имя       |   Тип   | Владелец  
--------+-----------------+---------+-----------
 public | categories      | таблица | westcrime
 public | games           | таблица | westcrime
 public | libraries       | таблица | westcrime
 public | orders          | таблица | westcrime
 public | orders_games    | таблица | westcrime
 public | payments        | таблица | westcrime
 public | platforms       | таблица | westcrime
 public | platforms_games | таблица | westcrime
 public | publishers      | таблица | westcrime
 public | reviews         | таблица | westcrime
 public | roles           | таблица | westcrime
 public | user_logs       | таблица | westcrime
 public | users           | таблица | westcrime
 public | wishlists       | таблица | westcrime
(14 строк)

********* ЗАПРОС *********
ALTER TABLE wishlists
RENAME TO Carts;
**************************

ALTER TABLE
                Список отношений
 Схема  |       Имя       |   Тип   | Владелец  
--------+-----------------+---------+-----------
 public | carts           | таблица | westcrime
 public | categories      | таблица | westcrime
 public | games           | таблица | westcrime
 public | libraries       | таблица | westcrime
 public | orders          | таблица | westcrime
 public | orders_games    | таблица | westcrime
 public | payments        | таблица | westcrime
 public | platforms       | таблица | westcrime
 public | platforms_games | таблица | westcrime
 public | publishers      | таблица | westcrime
 public | reviews         | таблица | westcrime
 public | roles           | таблица | westcrime
 public | user_logs       | таблица | westcrime
 public | users           | таблица | westcrime
(14 строк)

********* ЗАПРОС *********
INSERT INTO Categories (name) VALUES
('Action'),
('RPG'),
('Strategy'),
('Adventure'),
('Puzzle')
;
**************************

INSERT 0 5
********* ЗАПРОС *********
INSERT INTO Publishers (name, description) VALUES
('EA', 'Мировой лидер в игровой индустрии, известен своими спортивными симуляторами, такими как FIFA, а также широким спектром других популярных игр, включая шутеры Battlefield и ролевые игры Mass Effect.'),
('Ubisoft', 'Французская компания, славящаяся за создание великолепных открытых мировых игр, таких как Assassins Creed и Far Cry, а также серий Splinter Cell и Watch Dogs.'),
('Activision Blizzard', 'Гигант игровой индустрии с такими хитами, как Call of Duty, World of Warcraft и Overwatch. Одна из старейших компаний в сфере видеоигр.'),
('Bethesda', 'Известен своими эпическими ролевыми играми, включая The Elder Scrolls и Fallout. Их игры предлагают огромные открытые миры и глубокий сюжет.'),
('Rockstar Games', 'Создатели культовых Grand Theft Auto и Red Dead Redemption. Известен за детально проработанные миры и захватывающие истории в играх.');
**************************

INSERT 0 5
********* ЗАПРОС *********
select * from publishers
;
**************************

 publisher_id |        name         |                                                                                             description                                                                                              
--------------+---------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
            1 | EA                  | Мировой лидер в игровой индустрии, известен своими спортивными симуляторами, такими как FIFA, а также широким спектром других популярных игр, включая шутеры Battlefield и ролевые игры Mass Effect.
            2 | Ubisoft             | Французская компания, славящаяся за создание великолепных открытых мировых игр, таких как Assassins Creed и Far Cry, а также серий Splinter Cell и Watch Dogs.
            3 | Activision Blizzard | Гигант игровой индустрии с такими хитами, как Call of Duty, World of Warcraft и Overwatch. Одна из старейших компаний в сфере видеоигр.
            4 | Bethesda            | Известен своими эпическими ролевыми играми, включая The Elder Scrolls и Fallout. Их игры предлагают огромные открытые миры и глубокий сюжет.
            5 | Rockstar Games      | Создатели культовых Grand Theft Auto и Red Dead Redemption. Известен за детально проработанные миры и захватывающие истории в играх.
(5 строк)

********* ЗАПРОС *********
INSERT INTO Platforms (name) VALUES
('PC'),
('Xbox'),
('PlayStation');
**************************

INSERT 0 3
********* ЗАПРОС *********
INSERT INTO Categories (name) VALUES
('Simulator');
**************************

INSERT 0 1
********* ЗАПРОС *********
INSERT INTO Games (name, description, publisher_id, category_id, cost) VALUES
('FIFA 22', 'Футбольный симулятор с реалистичной графикой и улучшенным геймплеем.', (SELECT publisher_id FROM Publishers WHERE name = 'EA'), (SELECT category_id FROM Categories WHERE name = 'Simulator'), 39.99),
('Assassins Creed Valhalla', 'RPG-приключение, в котором вы играете за викинга и исследуете древнюю Англию.', (SELECT publisher_id FROM Publishers WHERE name = 'Ubisoft'), (SELECT category_id FROM Categories WHERE name = 'Adventure'), 19.99),
('Call of Duty: Warzone', 'Бесплатный боевой рояль в мире Call of Duty с интенсивными онлайн-сражениями.', (SELECT publisher_id FROM Publishers WHERE name = 'Activision Blizzard'), (SELECT category_id FROM Categories WHERE name = 'Action'), 0.0),
('The Elder Scrolls V: Skyrim', 'Эпическая RPG с открытым миром, где вы исследуете фэнтезийное королевство.', (SELECT publisher_id FROM Publishers WHERE name = 'Bethesda'), (SELECT category_id FROM Categories WHERE name = 'RPG'), 29.99),
('Grand Theft Auto V', 'Открытый мир, где вы совершаете ограбления и исследуете фиктивный город Лос-Сантос.', (SELECT publisher_id FROM Publishers WHERE name = 'Rockstar Games'), (SELECT category_id FROM Categories WHERE name = 'Adventure'), 39.99),
('Mass Effect Legendary Edition', 'Сборник ролевых игр с улучшенной графикой и вселенной научной фантастики.', (SELECT publisher_id FROM Publishers WHERE name = 'EA'), (SELECT category_id FROM Categories WHERE name = 'RPG'), 49.99),
('Far Cry 6', 'Шутер с открытым миром, вас ожидает борьба с тиранией на тропическом острове.', (SELECT publisher_id FROM Publishers WHERE name = 'Ubisoft'), (SELECT category_id FROM Categories WHERE name = 'Action'), 39.99),
('Diablo IV', 'RPG с мрачным фэнтезийным миром и борьбой с демонами.', (SELECT publisher_id FROM Publishers WHERE name = 'Activision Blizzard'), (SELECT category_id FROM Categories WHERE name = 'RPG'), 29.99),
('Fallout 4', 'Постапокалиптическая RPG с элементами выживания и исследования.', (SELECT publisher_id FROM Publishers WHERE name = 'Bethesda'), (SELECT category_id FROM Categories WHERE name = 'RPG'), 9.99),
('Red Dead Redemption 2', 'Вестерн с ошеломляющей графикой, где вы отправляетесь в путешествие в конце 19-го века.', (SELECT publisher_id FROM Publishers WHERE name = 'Rockstar Games'), (SELECT category_id FROM Categories WHERE name = 'Simulator'), 39.99);
**************************

INSERT 0 10
********* ЗАПРОС *********
select * from games
;
**************************

 game_id |             name              |                                       description                                       | publisher_id | category_id | cost  | picture_path 
---------+-------------------------------+-----------------------------------------------------------------------------------------+--------------+-------------+-------+--------------
       1 | FIFA 22                       | Футбольный симулятор с реалистичной графикой и улучшенным геймплеем.                    |            1 |           6 | 39.99 | 
       2 | Assassins Creed Valhalla      | RPG-приключение, в котором вы играете за викинга и исследуете древнюю Англию.           |            2 |           4 | 19.99 | 
       3 | Call of Duty: Warzone         | Бесплатный боевой рояль в мире Call of Duty с интенсивными онлайн-сражениями.           |            3 |           1 |   0.0 | 
       4 | The Elder Scrolls V: Skyrim   | Эпическая RPG с открытым миром, где вы исследуете фэнтезийное королевство.              |            4 |           2 | 29.99 | 
       5 | Grand Theft Auto V            | Открытый мир, где вы совершаете ограбления и исследуете фиктивный город Лос-Сантос.     |            5 |           4 | 39.99 | 
       6 | Mass Effect Legendary Edition | Сборник ролевых игр с улучшенной графикой и вселенной научной фантастики.               |            1 |           2 | 49.99 | 
       7 | Far Cry 6                     | Шутер с открытым миром, вас ожидает борьба с тиранией на тропическом острове.           |            2 |           1 | 39.99 | 
       8 | Diablo IV                     | RPG с мрачным фэнтезийным миром и борьбой с демонами.                                   |            3 |           2 | 29.99 | 
       9 | Fallout 4                     | Постапокалиптическая RPG с элементами выживания и исследования.                         |            4 |           2 |  9.99 | 
      10 | Red Dead Redemption 2         | Вестерн с ошеломляющей графикой, где вы отправляетесь в путешествие в конце 19-го века. |            5 |           6 | 39.99 | 
(10 строк)

********* ЗАПРОС *********
INSERT INTO Roles (name) VALUES
('User'),
('Admin');
**************************

INSERT 0 2
********* ЗАПРОС *********
insert into Users (nickname, password, email, role_id, balance) values ('lcolbourn0', '$2a$04$EW4zWKiZAPRdqvz/dqb6K.3qA26GLjsT8ZBAQDpb6JFjDEqGxbVuW', 'tfance0@jalbum.net', 1, 39.59);
**************************

********* ЗАПРОС *********
insert into Users (nickname, password, email, role_id, balance) values ('tmccroft1', '$2a$04$PUPWHe6OdiBe63iyJY1M9esrxfexyMDqwgEfqOIwQn9MVE4UwTcri', 'ebattey1@booking.com', 1, 6.01);
**************************

********* ЗАПРОС *********
insert into Users (nickname, password, email, role_id, balance) values ('haggott2', '$2a$04$0O9fgMOopSKo5nIgbK4FYukOtGhS55MrBnQNQV4wpC6VDShwozJkC', 'drubens2@i2i.jp', 1, 4.82);
**************************

********* ЗАПРОС *********
insert into Users (nickname, password, email, role_id, balance) values ('rgrolmann3', '$2a$04$jjgLBhQBaa7ZScTJtsZKx.96LCPHgxoYblm3iETgE.KzoMMzV5bIi', 'eclemmen3@liveinternet.ru', 1, 38.09);
**************************

********* ЗАПРОС *********
insert into Users (nickname, password, email, role_id, balance) values ('vmacklam4', '$2a$04$V/Q98ejholWc59WWu22WG.RHvp9KnCZIWwssqNbvHAvCOPK884pLq', 'deberst4@nifty.com', 1, 87.45);
**************************

********* ЗАПРОС *********
insert into Users (nickname, password, email, role_id, balance) values ('zvannozzii5', '$2a$04$M4985O7tBQwhM9gq3sQMtOb0VPecCd5O6PR4UiVfpgIr86nr6Xx4W', 'dellin5@dailymotion.com', 1, 10.13);
**************************

********* ЗАПРОС *********
insert into Users (nickname, password, email, role_id, balance) values ('rcreasy6', '$2a$04$uBNelcgZUbgeYtLVj4UdoedTIiYIZlk2MDQ43vphxnnBNmvfk8IKi', 'mfigliovanni6@myspace.com', 1, 67.49);
**************************

********* ЗАПРОС *********
insert into Users (nickname, password, email, role_id, balance) values ('ltchir7', '$2a$04$bFkCYx1ZNXor8oYhVf3rf.HzNLbPszFPLi9JYOvlVBaCOv2FnJleG', 'mziems7@statcounter.com', 1, 4.27);
**************************

********* ЗАПРОС *********
insert into Users (nickname, password, email, role_id, balance) values ('jnovello8', '$2a$04$lyh9YbopC.RgEipupXkwkeY6TDjNQLf0DuitjGkgk2dv9vphwO1wW', 'bwillder8@cisco.com', 1, 42.43);
**************************

********* ЗАПРОС *********
insert into Users (nickname, password, email, role_id, balance) values ('wbahde9', '$2a$04$NAp7qPF/O8EQNdTfwsU8UONZFMek3VYn/bQ1S5shDsTZIcsizzMTe', 'lchalk9@sitemeter.com', 1, 48.88);
**************************

********* ЗАПРОС *********
insert into Users (nickname, password, email, role_id, balance) values ('ffussella', '$2a$04$wSnENb5it6GVlhNRL7So0.3CUQM7WUnCjRxaByFkuQ.yzZRCFXNSm', 'gcallena@princeton.edu', 1, 84.91);
**************************

********* ЗАПРОС *********
insert into Users (nickname, password, email, role_id, balance) values ('clawmanb', '$2a$04$iLWdN72.v/Y7CUyuKUGgv.iosFV6unKvko9cVvGYPLQJJ9Tn6zjsa', 'mmenatb@craigslist.org', 1, 16.03);
**************************

********* ЗАПРОС *********
insert into Users (nickname, password, email, role_id, balance) values ('rcaugheyc', '$2a$04$xpSvGGLxe3PoitYQGf7RS.6Iqi4QiqOcrotBO.4hpC8gKTeXgYC6q', 'rmuckeenc@prnewswire.com', 1, 29.03);
**************************

********* ЗАПРОС *********
insert into Users (nickname, password, email, role_id, balance) values ('morwelld', '$2a$04$vikADNuesvfv8J2RyrdO.emsr4S4PKAOWr8d2hJOvw65RgrfnJHG6', 'foloned@amazon.de', 1, 80.17);
**************************

********* ЗАПРОС *********
insert into Users (nickname, password, email, role_id, balance) values ('thawke', '$2a$04$Io0JG1rYGrWLYK8lWnjXnemJzcHGvG28EJ.7buA0aDsABC0wxuk/m', 'ecrowchee@technorati.com', 1, 26.11);
**************************

********* ЗАПРОС *********
insert into Users (nickname, password, email, role_id, balance) values ('rmolloyf', '$2a$04$Y1Uwk09GFKLzIEqOUgALsuLVBcvOxqROr/SLRpfAKw8OENYEelMai', 'ydaelmanf@elegantthemes.com', 1, 64.7);
**************************

********* ЗАПРОС *********
insert into Users (nickname, password, email, role_id, balance) values ('bmelliardg', '$2a$04$WRNJmH.8ILrgbpweYKvlcuaX4NOXRh5rCm3oclfiN.6wvKib8RUG.', 'mpefferg@marriott.com', 1, 17.51);
**************************

********* ЗАПРОС *********
insert into Users (nickname, password, email, role_id, balance) values ('cskehanh', '$2a$04$b54zy6G1RCp/KZPpGFOXsuFaViQrgPAdntb0zvjK.ICMEeOKhC/3O', 'jgasnellh@cbslocal.com', 1, 23.76);
**************************

********* ЗАПРОС *********
insert into Users (nickname, password, email, role_id, balance) values ('dhurnelli', '$2a$04$CWh9fdT.1yJvW4MLqReqJ.v8PS/u4isRXW1hDPXGO8bC5TvDQJg76', 'acokei@washington.edu', 1, 2.45);
**************************

********* ЗАПРОС *********
insert into Users (nickname, password, email, role_id, balance) values ('bhendersonj', '$2a$04$GGxf.6ugg6ter/YSHTLU8e16ZG5c9sQdY569ouR47Jk5AjAUzNGNW', 'abriddenj@taobao.com', 1, 58.56);
**************************

********* ЗАПРОС *********
ALTER TABLE Users 
    ALTER COLUMN password TYPE VARCHAR(100),
;
**************************

********* ЗАПРОС *********
ALTER TABLE Users 
    ALTER COLUMN password TYPE VARCHAR(100);
**************************

ALTER TABLE
********* ЗАПРОС *********
insert into Users (nickname, password, email, role_id, balance) values ('lcolbourn0', '$2a$04$EW4zWKiZAPRdqvz/dqb6K.3qA26GLjsT8ZBAQDpb6JFjDEqGxbVuW', 'tfance0@jalbum.net', 1, 39.59);
**************************

INSERT 0 1
********* ЗАПРОС *********
insert into Users (nickname, password, email, role_id, balance) values ('tmccroft1', '$2a$04$PUPWHe6OdiBe63iyJY1M9esrxfexyMDqwgEfqOIwQn9MVE4UwTcri', 'ebattey1@booking.com', 1, 6.01);
**************************

INSERT 0 1
********* ЗАПРОС *********
insert into Users (nickname, password, email, role_id, balance) values ('haggott2', '$2a$04$0O9fgMOopSKo5nIgbK4FYukOtGhS55MrBnQNQV4wpC6VDShwozJkC', 'drubens2@i2i.jp', 1, 4.82);
**************************

INSERT 0 1
********* ЗАПРОС *********
insert into Users (nickname, password, email, role_id, balance) values ('rgrolmann3', '$2a$04$jjgLBhQBaa7ZScTJtsZKx.96LCPHgxoYblm3iETgE.KzoMMzV5bIi', 'eclemmen3@liveinternet.ru', 1, 38.09);
**************************

INSERT 0 1
********* ЗАПРОС *********
insert into Users (nickname, password, email, role_id, balance) values ('vmacklam4', '$2a$04$V/Q98ejholWc59WWu22WG.RHvp9KnCZIWwssqNbvHAvCOPK884pLq', 'deberst4@nifty.com', 1, 87.45);
**************************

INSERT 0 1
********* ЗАПРОС *********
insert into Users (nickname, password, email, role_id, balance) values ('zvannozzii5', '$2a$04$M4985O7tBQwhM9gq3sQMtOb0VPecCd5O6PR4UiVfpgIr86nr6Xx4W', 'dellin5@dailymotion.com', 1, 10.13);
**************************

INSERT 0 1
********* ЗАПРОС *********
insert into Users (nickname, password, email, role_id, balance) values ('rcreasy6', '$2a$04$uBNelcgZUbgeYtLVj4UdoedTIiYIZlk2MDQ43vphxnnBNmvfk8IKi', 'mfigliovanni6@myspace.com', 1, 67.49);
**************************

INSERT 0 1
********* ЗАПРОС *********
insert into Users (nickname, password, email, role_id, balance) values ('ltchir7', '$2a$04$bFkCYx1ZNXor8oYhVf3rf.HzNLbPszFPLi9JYOvlVBaCOv2FnJleG', 'mziems7@statcounter.com', 1, 4.27);
**************************

INSERT 0 1
********* ЗАПРОС *********
insert into Users (nickname, password, email, role_id, balance) values ('jnovello8', '$2a$04$lyh9YbopC.RgEipupXkwkeY6TDjNQLf0DuitjGkgk2dv9vphwO1wW', 'bwillder8@cisco.com', 1, 42.43);
**************************

INSERT 0 1
********* ЗАПРОС *********
insert into Users (nickname, password, email, role_id, balance) values ('wbahde9', '$2a$04$NAp7qPF/O8EQNdTfwsU8UONZFMek3VYn/bQ1S5shDsTZIcsizzMTe', 'lchalk9@sitemeter.com', 1, 48.88);
**************************

INSERT 0 1
********* ЗАПРОС *********
insert into Users (nickname, password, email, role_id, balance) values ('ffussella', '$2a$04$wSnENb5it6GVlhNRL7So0.3CUQM7WUnCjRxaByFkuQ.yzZRCFXNSm', 'gcallena@princeton.edu', 1, 84.91);
**************************

INSERT 0 1
********* ЗАПРОС *********
insert into Users (nickname, password, email, role_id, balance) values ('clawmanb', '$2a$04$iLWdN72.v/Y7CUyuKUGgv.iosFV6unKvko9cVvGYPLQJJ9Tn6zjsa', 'mmenatb@craigslist.org', 1, 16.03);
**************************

INSERT 0 1
********* ЗАПРОС *********
insert into Users (nickname, password, email, role_id, balance) values ('rcaugheyc', '$2a$04$xpSvGGLxe3PoitYQGf7RS.6Iqi4QiqOcrotBO.4hpC8gKTeXgYC6q', 'rmuckeenc@prnewswire.com', 1, 29.03);
**************************

INSERT 0 1
********* ЗАПРОС *********
insert into Users (nickname, password, email, role_id, balance) values ('morwelld', '$2a$04$vikADNuesvfv8J2RyrdO.emsr4S4PKAOWr8d2hJOvw65RgrfnJHG6', 'foloned@amazon.de', 1, 80.17);
**************************

INSERT 0 1
********* ЗАПРОС *********
insert into Users (nickname, password, email, role_id, balance) values ('thawke', '$2a$04$Io0JG1rYGrWLYK8lWnjXnemJzcHGvG28EJ.7buA0aDsABC0wxuk/m', 'ecrowchee@technorati.com', 1, 26.11);
**************************

INSERT 0 1
********* ЗАПРОС *********
insert into Users (nickname, password, email, role_id, balance) values ('rmolloyf', '$2a$04$Y1Uwk09GFKLzIEqOUgALsuLVBcvOxqROr/SLRpfAKw8OENYEelMai', 'ydaelmanf@elegantthemes.com', 1, 64.7);
**************************

INSERT 0 1
********* ЗАПРОС *********
insert into Users (nickname, password, email, role_id, balance) values ('bmelliardg', '$2a$04$WRNJmH.8ILrgbpweYKvlcuaX4NOXRh5rCm3oclfiN.6wvKib8RUG.', 'mpefferg@marriott.com', 1, 17.51);
**************************

INSERT 0 1
********* ЗАПРОС *********
insert into Users (nickname, password, email, role_id, balance) values ('cskehanh', '$2a$04$b54zy6G1RCp/KZPpGFOXsuFaViQrgPAdntb0zvjK.ICMEeOKhC/3O', 'jgasnellh@cbslocal.com', 1, 23.76);
**************************

INSERT 0 1
********* ЗАПРОС *********
insert into Users (nickname, password, email, role_id, balance) values ('dhurnelli', '$2a$04$CWh9fdT.1yJvW4MLqReqJ.v8PS/u4isRXW1hDPXGO8bC5TvDQJg76', 'acokei@washington.edu', 1, 2.45);
**************************

INSERT 0 1
********* ЗАПРОС *********
insert into Users (nickname, password, email, role_id, balance) values ('bhendersonj', '$2a$04$GGxf.6ugg6ter/YSHTLU8e16ZG5c9sQdY569ouR47Jk5AjAUzNGNW', 'abriddenj@taobao.com', 1, 58.56);
**************************

INSERT 0 1
********* ЗАПРОС *********
select * from users
;
**************************

 user_id |  nickname   |                           password                           |            email            | role_id | profile_pic_path | balance 
---------+-------------+--------------------------------------------------------------+-----------------------------+---------+------------------+---------
       1 | lcolbourn0  | $2a$04$EW4zWKiZAPRdqvz/dqb6K.3qA26GLjsT8ZBAQDpb6JFjDEqGxbVuW | tfance0@jalbum.net          |       1 |                  |   39.59
       2 | tmccroft1   | $2a$04$PUPWHe6OdiBe63iyJY1M9esrxfexyMDqwgEfqOIwQn9MVE4UwTcri | ebattey1@booking.com        |       1 |                  |    6.01
       3 | haggott2    | $2a$04$0O9fgMOopSKo5nIgbK4FYukOtGhS55MrBnQNQV4wpC6VDShwozJkC | drubens2@i2i.jp             |       1 |                  |    4.82
       4 | rgrolmann3  | $2a$04$jjgLBhQBaa7ZScTJtsZKx.96LCPHgxoYblm3iETgE.KzoMMzV5bIi | eclemmen3@liveinternet.ru   |       1 |                  |   38.09
       5 | vmacklam4   | $2a$04$V/Q98ejholWc59WWu22WG.RHvp9KnCZIWwssqNbvHAvCOPK884pLq | deberst4@nifty.com          |       1 |                  |   87.45
       6 | zvannozzii5 | $2a$04$M4985O7tBQwhM9gq3sQMtOb0VPecCd5O6PR4UiVfpgIr86nr6Xx4W | dellin5@dailymotion.com     |       1 |                  |   10.13
       7 | rcreasy6    | $2a$04$uBNelcgZUbgeYtLVj4UdoedTIiYIZlk2MDQ43vphxnnBNmvfk8IKi | mfigliovanni6@myspace.com   |       1 |                  |   67.49
       8 | ltchir7     | $2a$04$bFkCYx1ZNXor8oYhVf3rf.HzNLbPszFPLi9JYOvlVBaCOv2FnJleG | mziems7@statcounter.com     |       1 |                  |    4.27
       9 | jnovello8   | $2a$04$lyh9YbopC.RgEipupXkwkeY6TDjNQLf0DuitjGkgk2dv9vphwO1wW | bwillder8@cisco.com         |       1 |                  |   42.43
      10 | wbahde9     | $2a$04$NAp7qPF/O8EQNdTfwsU8UONZFMek3VYn/bQ1S5shDsTZIcsizzMTe | lchalk9@sitemeter.com       |       1 |                  |   48.88
      11 | ffussella   | $2a$04$wSnENb5it6GVlhNRL7So0.3CUQM7WUnCjRxaByFkuQ.yzZRCFXNSm | gcallena@princeton.edu      |       1 |                  |   84.91
      12 | clawmanb    | $2a$04$iLWdN72.v/Y7CUyuKUGgv.iosFV6unKvko9cVvGYPLQJJ9Tn6zjsa | mmenatb@craigslist.org      |       1 |                  |   16.03
      13 | rcaugheyc   | $2a$04$xpSvGGLxe3PoitYQGf7RS.6Iqi4QiqOcrotBO.4hpC8gKTeXgYC6q | rmuckeenc@prnewswire.com    |       1 |                  |   29.03
      14 | morwelld    | $2a$04$vikADNuesvfv8J2RyrdO.emsr4S4PKAOWr8d2hJOvw65RgrfnJHG6 | foloned@amazon.de           |       1 |                  |   80.17
      15 | thawke      | $2a$04$Io0JG1rYGrWLYK8lWnjXnemJzcHGvG28EJ.7buA0aDsABC0wxuk/m | ecrowchee@technorati.com    |       1 |                  |   26.11
      16 | rmolloyf    | $2a$04$Y1Uwk09GFKLzIEqOUgALsuLVBcvOxqROr/SLRpfAKw8OENYEelMai | ydaelmanf@elegantthemes.com |       1 |                  |    64.7
      17 | bmelliardg  | $2a$04$WRNJmH.8ILrgbpweYKvlcuaX4NOXRh5rCm3oclfiN.6wvKib8RUG. | mpefferg@marriott.com       |       1 |                  |   17.51
      18 | cskehanh    | $2a$04$b54zy6G1RCp/KZPpGFOXsuFaViQrgPAdntb0zvjK.ICMEeOKhC/3O | jgasnellh@cbslocal.com      |       1 |                  |   23.76
      19 | dhurnelli   | $2a$04$CWh9fdT.1yJvW4MLqReqJ.v8PS/u4isRXW1hDPXGO8bC5TvDQJg76 | acokei@washington.edu       |       1 |                  |    2.45
      20 | bhendersonj | $2a$04$GGxf.6ugg6ter/YSHTLU8e16ZG5c9sQdY569ouR47Jk5AjAUzNGNW | abriddenj@taobao.com        |       1 |                  |   58.56
(20 строк)

********* ЗАПРОС *********
INSERT INTO Platforms_Games (game_id, platform_id) VALUES
((SELECT game_id FROM Games WHERE name = 'FIFA 22'), (SELECT platform_id FROM Platforms WHERE name = 'PC')),
((SELECT game_id FROM Games WHERE name = 'FIFA 22'), (SELECT platform_id FROM Platforms WHERE name = 'Xbox')),
((SELECT game_id FROM Games WHERE name = 'FIFA 22'), (SELECT platform_id FROM Platforms WHERE name = 'PlayStation')),
((SELECT game_id FROM Games WHERE name = 'Call of Duty: Warzone'), (SELECT platform_id FROM Platforms WHERE name = 'PC')),
((SELECT game_id FROM Games WHERE name = 'Call of Duty: Warzone'), (SELECT platform_id FROM Platforms WHERE name = 'Xbox')),
((SELECT game_id FROM Games WHERE name = 'Call of Duty: Warzone'), (SELECT platform_id FROM Platforms WHERE name = 'PlayStation')),
((SELECT game_id FROM Games WHERE name = 'Grand Theft Auto V'), (SELECT platform_id FROM Platforms WHERE name = 'PC')),
((SELECT game_id FROM Games WHERE name = 'Grand Theft Auto V'), (SELECT platform_id FROM Platforms WHERE name = 'Xbox')),
((SELECT game_id FROM Games WHERE name = 'Grand Theft Auto V'), (SELECT platform_id FROM Platforms WHERE name = 'PlayStation')),
((SELECT game_id FROM Games WHERE name = 'Red Dead Redemption 2'), (SELECT platform_id FROM Platforms WHERE name = 'PC')),
((SELECT game_id FROM Games WHERE name = 'Red Dead Redemption 2'), (SELECT platform_id FROM Platforms WHERE name = 'Xbox')),
((SELECT game_id FROM Games WHERE name = 'Red Dead Redemption 2'), (SELECT platform_id FROM Platforms WHERE name = 'PlayStation')),
((SELECT game_id FROM Games WHERE name = 'Assassins Creed Valhalla'), (SELECT platform_id FROM Platforms WHERE name = 'PC')),
((SELECT game_id FROM Games WHERE name = 'The Elder Scrolls V: Skyrim'), (SELECT platform_id FROM Platforms WHERE name = 'PC')),
((SELECT game_id FROM Games WHERE name = 'Mass Effect Legendary Edition'), (SELECT platform_id FROM Platforms WHERE name = 'PC')),
((SELECT game_id FROM Games WHERE name = 'Far Cry 6'), (SELECT platform_id FROM Platforms WHERE name = 'PC')),
((SELECT game_id FROM Games WHERE name = 'Fallout 4'), (SELECT platform_id FROM Platforms WHERE name = 'PC'));
**************************

********* ЗАПРОС *********
INSERT INTO Reviews (user_id, rating, description, game_id) VALUES
(1, 4, 'Very cool game!', (SELECT game_id FROM Games WHERE name = 'FIFA 22')),
(1, 5, 'Masterpiece!', (SELECT game_id FROM Games WHERE name = 'Red Dead Redemption 2')),
(2, 3, 'Good.', (SELECT game_id FROM Games WHERE name = 'Call of Duty: Warzone')),
(5, 4, 'Nice open world!', (SELECT game_id FROM Games WHERE name = 'The Elder Scrolls V: Skyrim')),
(7, 2, 'Very bad product.', (SELECT game_id FROM Games WHERE name = 'FIFA 22')),
(7, 5, 'Masterpiece!', (SELECT game_id FROM Games WHERE name = 'Fallout 4')),
(15, 5, 'Waste of money and time!', (SELECT game_id FROM Games WHERE name = 'Assassins Creed Valhalla'));
**************************

INSERT 0 7
********* ЗАПРОС *********
select * from reviews
;
**************************

 review_id | user_id | game_id | rating |       description        
-----------+---------+---------+--------+--------------------------
         1 |       1 |       1 |      4 | Very cool game!
         2 |       1 |      10 |      5 | Masterpiece!
         3 |       2 |       3 |      3 | Good.
         4 |       5 |       4 |      4 | Nice open world!
         5 |       7 |       1 |      2 | Very bad product.
         6 |       7 |       9 |      5 | Masterpiece!
         7 |      15 |       2 |      5 | Waste of money and time!
(7 строк)

********* ЗАПРОС *********
INSERT INTO Reviews (user_id, rating, description, game_id) VALUES
(1, 6, 'Very cool game!', (SELECT game_id FROM Games WHERE name = 'FIFA 22'));
**************************

********* ЗАПРОС *********
ALTER TABLE Libraries add CONSTRAINT unique_library_entry UNIQUE (game_id, user_id)
;
**************************

ALTER TABLE
********* ЗАПРОС *********
ALTER TABLE Carts add CONSTRAINT unique_cart_entry UNIQUE (game_id, user_id)
;
**************************

ALTER TABLE
********* ЗАПРОС *********
INSERT INTO Libraries (game_id, user_id) VALUES
((SELECT game_id FROM Games WHERE name = 'FIFA 22'), 1),
((SELECT game_id FROM Games WHERE name = 'FIFA 22'), 2),
((SELECT game_id FROM Games WHERE name = 'FIFA 22'), 3),
((SELECT game_id FROM Games WHERE name = 'Call of Duty: Warzone'), 15),
((SELECT game_id FROM Games WHERE name = 'Red Dead Redemption 2'), 15),
((SELECT game_id FROM Games WHERE name = 'Fallout 4'), 15);
**************************

INSERT 0 6
********* ЗАПРОС *********
INSERT INTO Carts (game_id, user_id) VALUES
((SELECT game_id FROM Games WHERE name = 'FIFA 22'), 5),
((SELECT game_id FROM Games WHERE name = 'FIFA 22'), 6),
((SELECT game_id FROM Games WHERE name = 'FIFA 22'), 9),
((SELECT game_id FROM Games WHERE name = 'Call of Duty: Warzone'), 16),
((SELECT game_id FROM Games WHERE name = 'Red Dead Redemption 2'), 16),
((SELECT game_id FROM Games WHERE name = 'Fallout 4'), 16);
**************************

INSERT 0 6
********* ЗАПРОС *********
INSERT INTO Orders (user_id, order_date, status) VALUES
(1, (SELECT CURRENT_DATE), 'Заказ не сформирован'),
(2, (SELECT CURRENT_DATE), 'Заказ не сформирован'),
(11, (SELECT CURRENT_DATE), 'Заказ ждет оплаты');
**************************

********* ЗАПРОС *********
UPDATE Orders
SET amount = (
    SELECT SUM(Games.cost)
    FROM Orders_Games
    JOIN Games ON Orders_Games.game_id = Games.game_id
    WHERE Orders_Games.order_id = Orders.order_id
)
WHERE user_id = 1;
**************************

UPDATE 0
********* ЗАПРОС *********
INSERT INTO Orders (user_id, order_date, status, amount) VALUES
(1, (SELECT CURRENT_DATE), 'Заказ не сформирован', 0),
(2, (SELECT CURRENT_DATE), 'Заказ не сформирован', 0),
(11, (SELECT CURRENT_DATE), 'Заказ не сформирован', 0);
**************************

INSERT 0 3
********* ЗАПРОС *********
INSERT INTO Orders_Games (game_id, order_id) VALUE 
(1, (SELECT order_id FROM Orders WHERE user_id = 11)),
(3, (SELECT order_id FROM Orders WHERE user_id = 11));
**************************

********* ЗАПРОС *********
INSERT INTO Orders_Games (game_id, order_id) VALUES 
(1, (SELECT order_id FROM Orders WHERE user_id = 11)),
(3, (SELECT order_id FROM Orders WHERE user_id = 11));
**************************

INSERT 0 2
********* ЗАПРОС *********
UPDATE Orders
SET amount = (
    SELECT SUM(Games.cost)
    FROM Orders_Games
    JOIN Games ON Orders_Games.game_id = Games.game_id
    WHERE Orders_Games.order_id = Orders.order_id
)
WHERE user_id = 1;
**************************

********* ЗАПРОС *********
select * from orders
;
**************************

 order_id | user_id | order_date |        status        | amount 
----------+---------+------------+----------------------+--------
        2 |       1 | 2023-10-30 | Заказ не сформирован |      0
        3 |       2 | 2023-10-30 | Заказ не сформирован |      0
        4 |      11 | 2023-10-30 | Заказ не сформирован |      0
(3 строки)

********* ЗАПРОС *********
Delete * from orders
;
**************************

********* ЗАПРОС *********
Delete from orders
;
**************************

********* ЗАПРОС *********
delete from orders_games
;
**************************

DELETE 2
********* ЗАПРОС *********
Delete from orders
;
**************************

DELETE 3
********* ЗАПРОС *********
INSERT INTO Orders (user_id, order_date, status, amount) VALUES
(1, (SELECT CURRENT_DATE), 'Заказ не сформирован', 0.0),
(2, (SELECT CURRENT_DATE), 'Заказ не сформирован', 0.0),
(11, (SELECT CURRENT_DATE), 'Заказ не сформирован', 0.0);
**************************

INSERT 0 3
********* ЗАПРОС *********
INSERT INTO Orders_Games (game_id, order_id) VALUES
(1, (SELECT order_id FROM Orders WHERE user_id = 11)),
(3, (SELECT order_id FROM Orders WHERE user_id = 11));
**************************

INSERT 0 2
********* ЗАПРОС *********
UPDATE Orders
SET amount = (
    SELECT SUM(Games.cost)
    FROM Orders_Games
    JOIN Games ON Orders_Games.game_id = Games.game_id
    WHERE Orders_Games.order_id = Orders.order_id
)
WHERE user_id = 1;
**************************

********* ЗАПРОС *********
alter table orders alter column amount type decimal
;
**************************

ALTER TABLE
********* ЗАПРОС *********
UPDATE Orders
SET amount = (
    SELECT SUM(Games.cost)
    FROM Orders_Games
    JOIN Games ON Orders_Games.game_id = Games.game_id
    WHERE Orders_Games.order_id = Orders.order_id
)
WHERE user_id = 1;
**************************

********* ЗАПРОС *********
alter table orders alter column amount drop not null
;
**************************

ALTER TABLE
********* ЗАПРОС *********
UPDATE Orders
SET amount = (
    SELECT SUM(Games.cost)
    FROM Orders_Games
    JOIN Games ON Orders_Games.game_id = Games.game_id
    WHERE Orders_Games.order_id = Orders.order_id
)
WHERE user_id = 1;
**************************

UPDATE 1
********* ЗАПРОС *********
select * from orders
;
**************************

 order_id | user_id | order_date |        status        | amount 
----------+---------+------------+----------------------+--------
        6 |       2 | 2023-10-30 | Заказ не сформирован |    0.0
        7 |      11 | 2023-10-30 | Заказ не сформирован |    0.0
        5 |       1 | 2023-10-30 | Заказ не сформирован |       
(3 строки)

********* ЗАПРОС *********
select * from orders_games;
**************************

 game_id | order_id 
---------+----------
       1 |        7
       3 |        7
(2 строки)

********* ЗАПРОС *********
UPDATE Orders
SET amount = (
    SELECT SUM(Games.cost)
    FROM Orders_Games
    JOIN Games ON Orders_Games.game_id = Games.game_id
    WHERE Orders_Games.order_id = Orders.order_id
)
WHERE user_id = 11;
**************************

UPDATE 1
********* ЗАПРОС *********
select * from orders
;
**************************

 order_id | user_id | order_date |        status        | amount 
----------+---------+------------+----------------------+--------
        6 |       2 | 2023-10-30 | Заказ не сформирован |    0.0
        5 |       1 | 2023-10-30 | Заказ не сформирован |       
        7 |      11 | 2023-10-30 | Заказ не сформирован |  39.99
(3 строки)

********* ЗАПРОС *********
select * from games
;
**************************

 game_id |             name              |                                       description                                       | publisher_id | category_id | cost  | picture_path 
---------+-------------------------------+-----------------------------------------------------------------------------------------+--------------+-------------+-------+--------------
       1 | FIFA 22                       | Футбольный симулятор с реалистичной графикой и улучшенным геймплеем.                    |            1 |           6 | 39.99 | 
       2 | Assassins Creed Valhalla      | RPG-приключение, в котором вы играете за викинга и исследуете древнюю Англию.           |            2 |           4 | 19.99 | 
       3 | Call of Duty: Warzone         | Бесплатный боевой рояль в мире Call of Duty с интенсивными онлайн-сражениями.           |            3 |           1 |   0.0 | 
       4 | The Elder Scrolls V: Skyrim   | Эпическая RPG с открытым миром, где вы исследуете фэнтезийное королевство.              |            4 |           2 | 29.99 | 
       5 | Grand Theft Auto V            | Открытый мир, где вы совершаете ограбления и исследуете фиктивный город Лос-Сантос.     |            5 |           4 | 39.99 | 
       6 | Mass Effect Legendary Edition | Сборник ролевых игр с улучшенной графикой и вселенной научной фантастики.               |            1 |           2 | 49.99 | 
       7 | Far Cry 6                     | Шутер с открытым миром, вас ожидает борьба с тиранией на тропическом острове.           |            2 |           1 | 39.99 | 
       8 | Diablo IV                     | RPG с мрачным фэнтезийным миром и борьбой с демонами.                                   |            3 |           2 | 29.99 | 
       9 | Fallout 4                     | Постапокалиптическая RPG с элементами выживания и исследования.                         |            4 |           2 |  9.99 | 
      10 | Red Dead Redemption 2         | Вестерн с ошеломляющей графикой, где вы отправляетесь в путешествие в конце 19-го века. |            5 |           6 | 39.99 | 
(10 строк)

********* ЗАПРОС *********
UPDATE Orders
SET status = 'Заказ ждет оплаты'
WHERE user_id = 11;
**************************

********* ЗАПРОС *********
ALTER TABLE Users ALTER COLUMN role_id SET ON DELETE CASCADE;
**************************

********* ЗАПРОС *********
select * from roles
;
**************************

 role_id | name  
---------+-------
       1 | User
       2 | Admin
(2 строки)

********* ЗАПРОС *********
SELECT conname AS constraint_name, confrelid::regclass AS table_name, attname AS column_name, confupdtype AS update_action, confdeltype AS delete_action
FROM pg_constraint
JOIN pg_attribute ON attrelid = confrelid AND attnum = ANY(confkey)
WHERE confrelid = 'users'::regclass;
**************************

    constraint_name     | table_name | column_name | update_action | delete_action 
------------------------+------------+-------------+---------------+---------------
 wishlists_user_id_fkey | users      | user_id     | a             | a
 libraries_user_id_fkey | users      | user_id     | a             | a
 user_logs_user_id_fkey | users      | user_id     | a             | a
 payments_user_id_fkey  | users      | user_id     | a             | a
 orders_user_id_fkey    | users      | user_id     | a             | a
 reviews_user_id_fkey   | users      | user_id     | a             | a
(6 строк)

********* ЗАПРОС *********
alter table users
drop constraint role_id,
add constraint role_id
   foreign key (role_id)
   references roles(role_id)
   on delete cascade;
**************************

********* ЗАПРОС *********
add constraint role_id
   foreign key (role_id)
   references roles(role_id)
   on delete cascade;
**************************

********* ЗАПРОС *********
alter table
add constraint role_id
   foreign key (role_id)
   references roles(role_id)
   on delete cascade;
**************************

********* ЗАПРОС *********
alter table users
add constraint role_id
   foreign key (role_id)
   references roles(role_id)
   on delete cascade;
**************************

ALTER TABLE
********* ЗАПРОС *********
select * from users
;
**************************

 user_id |  nickname   |                           password                           |            email            | role_id | profile_pic_path | balance 
---------+-------------+--------------------------------------------------------------+-----------------------------+---------+------------------+---------
       1 | lcolbourn0  | $2a$04$EW4zWKiZAPRdqvz/dqb6K.3qA26GLjsT8ZBAQDpb6JFjDEqGxbVuW | tfance0@jalbum.net          |       1 |                  |   39.59
       2 | tmccroft1   | $2a$04$PUPWHe6OdiBe63iyJY1M9esrxfexyMDqwgEfqOIwQn9MVE4UwTcri | ebattey1@booking.com        |       1 |                  |    6.01
       3 | haggott2    | $2a$04$0O9fgMOopSKo5nIgbK4FYukOtGhS55MrBnQNQV4wpC6VDShwozJkC | drubens2@i2i.jp             |       1 |                  |    4.82
       4 | rgrolmann3  | $2a$04$jjgLBhQBaa7ZScTJtsZKx.96LCPHgxoYblm3iETgE.KzoMMzV5bIi | eclemmen3@liveinternet.ru   |       1 |                  |   38.09
       5 | vmacklam4   | $2a$04$V/Q98ejholWc59WWu22WG.RHvp9KnCZIWwssqNbvHAvCOPK884pLq | deberst4@nifty.com          |       1 |                  |   87.45
       6 | zvannozzii5 | $2a$04$M4985O7tBQwhM9gq3sQMtOb0VPecCd5O6PR4UiVfpgIr86nr6Xx4W | dellin5@dailymotion.com     |       1 |                  |   10.13
       7 | rcreasy6    | $2a$04$uBNelcgZUbgeYtLVj4UdoedTIiYIZlk2MDQ43vphxnnBNmvfk8IKi | mfigliovanni6@myspace.com   |       1 |                  |   67.49
       8 | ltchir7     | $2a$04$bFkCYx1ZNXor8oYhVf3rf.HzNLbPszFPLi9JYOvlVBaCOv2FnJleG | mziems7@statcounter.com     |       1 |                  |    4.27
       9 | jnovello8   | $2a$04$lyh9YbopC.RgEipupXkwkeY6TDjNQLf0DuitjGkgk2dv9vphwO1wW | bwillder8@cisco.com         |       1 |                  |   42.43
      10 | wbahde9     | $2a$04$NAp7qPF/O8EQNdTfwsU8UONZFMek3VYn/bQ1S5shDsTZIcsizzMTe | lchalk9@sitemeter.com       |       1 |                  |   48.88
      11 | ffussella   | $2a$04$wSnENb5it6GVlhNRL7So0.3CUQM7WUnCjRxaByFkuQ.yzZRCFXNSm | gcallena@princeton.edu      |       1 |                  |   84.91
      12 | clawmanb    | $2a$04$iLWdN72.v/Y7CUyuKUGgv.iosFV6unKvko9cVvGYPLQJJ9Tn6zjsa | mmenatb@craigslist.org      |       1 |                  |   16.03
      13 | rcaugheyc   | $2a$04$xpSvGGLxe3PoitYQGf7RS.6Iqi4QiqOcrotBO.4hpC8gKTeXgYC6q | rmuckeenc@prnewswire.com    |       1 |                  |   29.03
      14 | morwelld    | $2a$04$vikADNuesvfv8J2RyrdO.emsr4S4PKAOWr8d2hJOvw65RgrfnJHG6 | foloned@amazon.de           |       1 |                  |   80.17
      15 | thawke      | $2a$04$Io0JG1rYGrWLYK8lWnjXnemJzcHGvG28EJ.7buA0aDsABC0wxuk/m | ecrowchee@technorati.com    |       1 |                  |   26.11
      16 | rmolloyf    | $2a$04$Y1Uwk09GFKLzIEqOUgALsuLVBcvOxqROr/SLRpfAKw8OENYEelMai | ydaelmanf@elegantthemes.com |       1 |                  |    64.7
      17 | bmelliardg  | $2a$04$WRNJmH.8ILrgbpweYKvlcuaX4NOXRh5rCm3oclfiN.6wvKib8RUG. | mpefferg@marriott.com       |       1 |                  |   17.51
      18 | cskehanh    | $2a$04$b54zy6G1RCp/KZPpGFOXsuFaViQrgPAdntb0zvjK.ICMEeOKhC/3O | jgasnellh@cbslocal.com      |       1 |                  |   23.76
      19 | dhurnelli   | $2a$04$CWh9fdT.1yJvW4MLqReqJ.v8PS/u4isRXW1hDPXGO8bC5TvDQJg76 | acokei@washington.edu       |       1 |                  |    2.45
      20 | bhendersonj | $2a$04$GGxf.6ugg6ter/YSHTLU8e16ZG5c9sQdY569ouR47Jk5AjAUzNGNW | abriddenj@taobao.com        |       1 |                  |   58.56
(20 строк)

********* ЗАПРОС *********
alter table reviews
add constraint game_id
   foreign key (game_id)
   references games(game_id)
   on delete cascade;
**************************

ALTER TABLE
********* ЗАПРОС *********
alter table reviews
add constraint user_id
   foreign key (user_id)
   references users(user_id)
   on delete cascade;
**************************

ALTER TABLE
********* ЗАПРОС *********
select * from reviews
;
**************************

 review_id | user_id | game_id | rating |       description        
-----------+---------+---------+--------+--------------------------
         1 |       1 |       1 |      4 | Very cool game!
         2 |       1 |      10 |      5 | Masterpiece!
         3 |       2 |       3 |      3 | Good.
         4 |       5 |       4 |      4 | Nice open world!
         5 |       7 |       1 |      2 | Very bad product.
         6 |       7 |       9 |      5 | Masterpiece!
         7 |      15 |       2 |      5 | Waste of money and time!
(7 строк)

********* ЗАПРОС *********
alter table gamesadd constraint user_id
   foreign key (user_id)
   references users(user_id)
   on delete cascade;
**************************

********* ЗАПРОС *********
alter table games add constraint publisher_id
   foreign key (publisher_id)
   references publishers(publisher_id)
   on delete cascade;
**************************

ALTER TABLE
********* ЗАПРОС *********
alter table games add constraint category_id
   foreign key (category_id)
   references categories(category_id)
   on delete cascade;
**************************

ALTER TABLE
********* ЗАПРОС *********
alter table platforms_games add constraint game_id
   foreign key (game_id)
   references games(game_id)
   on delete cascade;
**************************

ALTER TABLE
********* ЗАПРОС *********
alter table platforms_games add constraint platform_id
   foreign key (platform_id)
   references platforms(platform_id)
   on delete cascade;
**************************

ALTER TABLE
********* ЗАПРОС *********
alter table carts add constraint game_id
   foreign key (game_id)
   references games(game_id)
   on delete cascade;
**************************

ALTER TABLE
********* ЗАПРОС *********
alter table carts add constraint user_id
   foreign key (user_id)
   references users(user_id)
   on delete cascade;
**************************

ALTER TABLE
********* ЗАПРОС *********
alter table libraries add constraint game_id
   foreign key (game_id)
   references games(game_id)
   on delete cascade;
**************************

ALTER TABLE
********* ЗАПРОС *********
alter table libraries add constraint user_id
   foreign key (user_id)
   references users(user_id)
   on delete cascade;
**************************

ALTER TABLE
********* ЗАПРОС *********
alter table payments add constraint user_id
   foreign key (user_id)
   references users(user_id)
   on delete cascade;
**************************

ALTER TABLE
********* ЗАПРОС *********
alter table orders add constraint user_id
   foreign key (user_id)
   references users(user_id)
   on delete cascade;
**************************

ALTER TABLE
********* ЗАПРОС *********
alter table orders_games add constraint game_id
   foreign key (game_id)
   references games(game_id)
   on delete cascade;
**************************

ALTER TABLE
********* ЗАПРОС *********
alter table orders_games add constraint order_id
   foreign key (order_id)
   references orders(order_id)
   on delete cascade;
**************************

ALTER TABLE
********* ЗАПРОС *********
select * from games
;
**************************

 game_id |             name              |                                       description                                       | publisher_id | category_id | cost  | picture_path 
---------+-------------------------------+-----------------------------------------------------------------------------------------+--------------+-------------+-------+--------------
       1 | FIFA 22                       | Футбольный симулятор с реалистичной графикой и улучшенным геймплеем.                    |            1 |           6 | 39.99 | 
       2 | Assassins Creed Valhalla      | RPG-приключение, в котором вы играете за викинга и исследуете древнюю Англию.           |            2 |           4 | 19.99 | 
       3 | Call of Duty: Warzone         | Бесплатный боевой рояль в мире Call of Duty с интенсивными онлайн-сражениями.           |            3 |           1 |   0.0 | 
       4 | The Elder Scrolls V: Skyrim   | Эпическая RPG с открытым миром, где вы исследуете фэнтезийное королевство.              |            4 |           2 | 29.99 | 
       5 | Grand Theft Auto V            | Открытый мир, где вы совершаете ограбления и исследуете фиктивный город Лос-Сантос.     |            5 |           4 | 39.99 | 
       6 | Mass Effect Legendary Edition | Сборник ролевых игр с улучшенной графикой и вселенной научной фантастики.               |            1 |           2 | 49.99 | 
       7 | Far Cry 6                     | Шутер с открытым миром, вас ожидает борьба с тиранией на тропическом острове.           |            2 |           1 | 39.99 | 
       8 | Diablo IV                     | RPG с мрачным фэнтезийным миром и борьбой с демонами.                                   |            3 |           2 | 29.99 | 
       9 | Fallout 4                     | Постапокалиптическая RPG с элементами выживания и исследования.                         |            4 |           2 |  9.99 | 
      10 | Red Dead Redemption 2         | Вестерн с ошеломляющей графикой, где вы отправляетесь в путешествие в конце 19-го века. |            5 |           6 | 39.99 | 
(10 строк)

********* ЗАПРОС *********
SELECT * FROM Orders WHERE 
order_id = 11;
**************************

 order_id | user_id | order_date | status | amount 
----------+---------+------------+--------+--------
(0 строк)

********* ЗАПРОС *********
select * from orders
;
**************************

 order_id | user_id | order_date |        status        | amount 
----------+---------+------------+----------------------+--------
        6 |       2 | 2023-10-30 | Заказ не сформирован |    0.0
        5 |       1 | 2023-10-30 | Заказ не сформирован |       
        7 |      11 | 2023-10-30 | Заказ ждет оплаты    |  39.99
(3 строки)

********* ЗАПРОС *********
SELECT * FROM Orders WHERE 
user_id = 11;
**************************

 order_id | user_id | order_date |      status       | amount 
----------+---------+------------+-------------------+--------
        7 |      11 | 2023-10-30 | Заказ ждет оплаты |  39.99
(1 строка)

********* ЗАПРОС *********
SELECT game_id FROM Orders_Games WHERE
user_id = 11;
**************************

********* ЗАПРОС *********
SELECT game_id FROM Orders_Games WHERE
order_id = (SELECT order_id FROM Orders WHERE user_id == 11);
**************************

********* ЗАПРОС *********
SELECT game_id FROM Orders_Games WHERE
order_id = (SELECT order_id FROM Orders WHERE user_id = 11);
**************************

 game_id 
---------
       1
       3
(2 строки)

********* ЗАПРОС *********
INSERT INTO Orders (user_id, order_date, status, amount) VALUES
(11, (SELECT CURRENT_DATE), 'Заказ не сформирован', 0.0);
**************************

INSERT 0 1
********* ЗАПРОС *********
INSERT INTO Orders_Games (game_id, order_id) VALUES
(4, (SELECT order_id FROM Orders WHERE user_id = 11)),
(6, (SELECT order_id FROM Orders WHERE user_id = 11));
**************************

********* ЗАПРОС *********
INSERT INTO Orders_Games (game_id, order_id) VALUES
(4, (SELECT order_id FROM Orders WHERE user_id = 11)),
(6, 8);
**************************

********* ЗАПРОС *********
INSERT INTO Orders_Games (game_id, order_id) VALUES
(4, 8),
(6, 8);
**************************

INSERT 0 2
********* ЗАПРОС *********
select * from orders
;
**************************

 order_id | user_id | order_date |        status        | amount 
----------+---------+------------+----------------------+--------
        6 |       2 | 2023-10-30 | Заказ не сформирован |    0.0
        5 |       1 | 2023-10-30 | Заказ не сформирован |       
        7 |      11 | 2023-10-30 | Заказ ждет оплаты    |  39.99
        8 |      11 | 2023-10-31 | Заказ не сформирован |    0.0
(4 строки)

********* ЗАПРОС *********
UPDATE Orders
SET amount = (
    SELECT SUM(Games.cost)
    FROM Orders_Games
    JOIN Games ON Orders_Games.game_id = Games.game_id
    WHERE Orders_Games.order_id = Orders.order_id
)
WHERE order_id = 8;
**************************

UPDATE 1
********* ЗАПРОС *********
select * from orders
;
**************************

 order_id | user_id | order_date |        status        | amount 
----------+---------+------------+----------------------+--------
        6 |       2 | 2023-10-30 | Заказ не сформирован |    0.0
        5 |       1 | 2023-10-30 | Заказ не сформирован |       
        7 |      11 | 2023-10-30 | Заказ ждет оплаты    |  39.99
        8 |      11 | 2023-10-31 | Заказ не сформирован |  79.98
(4 строки)

********* ЗАПРОС *********
SELECT * FROM Orders WHERE 
user_id = 11;
**************************

 order_id | user_id | order_date |        status        | amount 
----------+---------+------------+----------------------+--------
        7 |      11 | 2023-10-30 | Заказ ждет оплаты    |  39.99
        8 |      11 | 2023-10-31 | Заказ не сформирован |  79.98
(2 строки)

********* ЗАПРОС *********
SELECT game_id FROM Orders_Games WHERE
order_id = (SELECT order_id FROM Orders WHERE user_id = 11);
**************************

********* ЗАПРОС *********
SELECT * FROM Orders WHERE 
user_id = 11;
**************************

 order_id | user_id | order_date |        status        | amount 
----------+---------+------------+----------------------+--------
        7 |      11 | 2023-10-30 | Заказ ждет оплаты    |  39.99
        8 |      11 | 2023-10-31 | Заказ не сформирован |  79.98
(2 строки)

********* ЗАПРОС *********
SELECT game_id FROM Orders_Games WHERE
order_id = 8;
**************************

 game_id 
---------
       4
       6
(2 строки)

********* ЗАПРОС *********
SELECT u.name, o.id FROM Users u
LEFT JOIN Orders o ON u.user_id = o.user_id
LEFT JOIN Orders_Games og on og.order_id = o.order_id;
**************************

********* ЗАПРОС *********
SELECT u.nickname, o.id FROM Users u
LEFT JOIN Orders o ON u.user_id = o.user_id
LEFT JOIN Orders_Games og on og.order_id = o.order_id;
**************************

********* ЗАПРОС *********
SELECT u.nickname, o.order_id FROM Users u
LEFT JOIN Orders o ON u.user_id = o.user_id
LEFT JOIN Orders_Games og on og.order_id = o.order_id;
**************************

  nickname   | order_id 
-------------+----------
 ffussella   |        7
 ffussella   |        7
 ffussella   |        8
 ffussella   |        8
 lcolbourn0  |        5
 tmccroft1   |        6
 bhendersonj |         
 bmelliardg  |         
 clawmanb    |         
 wbahde9     |         
 cskehanh    |         
 thawke      |         
 rcaugheyc   |         
 vmacklam4   |         
 dhurnelli   |         
 ltchir7     |         
 zvannozzii5 |         
 rmolloyf    |         
 rgrolmann3  |         
 haggott2    |         
 morwelld    |         
 jnovello8   |         
 rcreasy6    |         
(23 строки)

********* ЗАПРОС *********
SELECT u.nickname, o.order_id AS order_id, og.game_id FROM Users u
LEFT JOIN Orders o ON u.user_id = o.user_id
LEFT JOIN Orders_Games og on og.order_id = o.order_id;
**************************

  nickname   | order_id | game_id 
-------------+----------+---------
 ffussella   |        7 |       1
 ffussella   |        7 |       3
 ffussella   |        8 |       4
 ffussella   |        8 |       6
 lcolbourn0  |        5 |        
 tmccroft1   |        6 |        
 bhendersonj |          |        
 bmelliardg  |          |        
 clawmanb    |          |        
 wbahde9     |          |        
 cskehanh    |          |        
 thawke      |          |        
 rcaugheyc   |          |        
 vmacklam4   |          |        
 dhurnelli   |          |        
 ltchir7     |          |        
 zvannozzii5 |          |        
 rmolloyf    |          |        
 rgrolmann3  |          |        
 haggott2    |          |        
 morwelld    |          |        
 jnovello8   |          |        
 rcreasy6    |          |        
(23 строки)

********* ЗАПРОС *********
SELECT u.nickname, g.cost FROM Users u
LEFT JOIN Orders o ON u.user_id = o.user_id
LEFT JOIN Orders_Games og ON og.order_id = o.order_id
LEFT JOIN Games g ON g.game_id = og.game_id;
**************************

  nickname   | cost  
-------------+-------
 ffussella   | 39.99
 ffussella   |   0.0
 ffussella   | 29.99
 ffussella   | 49.99
 lcolbourn0  |      
 tmccroft1   |      
 bhendersonj |      
 bmelliardg  |      
 clawmanb    |      
 wbahde9     |      
 cskehanh    |      
 thawke      |      
 rcaugheyc   |      
 vmacklam4   |      
 dhurnelli   |      
 ltchir7     |      
 zvannozzii5 |      
 rmolloyf    |      
 rgrolmann3  |      
 haggott2    |      
 morwelld    |      
 jnovello8   |      
 rcreasy6    |      
(23 строки)

********* ЗАПРОС *********
SELECT u.nickname, SUM(g.cost) FROM Users u
LEFT JOIN Orders o ON u.user_id = o.user_id
LEFT JOIN Orders_Games og ON og.order_id = o.order_id
LEFT JOIN Games g ON g.game_id = og.game_id
GROUP BY u.nickname;
**************************

  nickname   |  sum   
-------------+--------
 tmccroft1   |       
 lcolbourn0  |       
 dhurnelli   |       
 vmacklam4   |       
 bmelliardg  |       
 cskehanh    |       
 ltchir7     |       
 rmolloyf    |       
 morwelld    |       
 ffussella   | 119.97
 bhendersonj |       
 jnovello8   |       
 thawke      |       
 clawmanb    |       
 rgrolmann3  |       
 zvannozzii5 |       
 rcaugheyc   |       
 haggott2    |       
 wbahde9     |       
 rcreasy6    |       
(20 строк)

********* ЗАПРОС *********
SELECT u.nickname, SUM(g.cost) FROM Users u
LEFT JOIN Orders o ON u.user_id = o.user_id
LEFT JOIN Orders_Games og ON og.order_id = o.order_id
LEFT JOIN Games g ON g.game_id = og.game_id
GROUP BY u.nickname ORDER BY g.cost DESC HAVING SUM(g.cost) > 0;
**************************

********* ЗАПРОС *********
SELECT u.nickname, SUM(g.cost) AS total_cost FROM Users u
LEFT JOIN Orders o ON u.user_id = o.user_id
LEFT JOIN Orders_Games og ON og.order_id = o.order_id
LEFT JOIN Games g ON g.game_id = og.game_id
GROUP BY u.nickname ORDER BY total_cost DESC HAVING total_cost > 0;
**************************

********* ЗАПРОС *********
SELECT u.nickname, SUM(g.cost) AS total_cost FROM Users u
LEFT JOIN Orders o ON u.user_id = o.user_id
LEFT JOIN Orders_Games og ON og.order_id = o.order_id
LEFT JOIN Games g ON g.game_id = og.game_id
GROUP BY u.nickname ORDER BY total_cost HAVING total_cost > 0;
**************************

********* ЗАПРОС *********
SELECT u.nickname, SUM(g.cost) AS total_cost FROM Users u
LEFT JOIN Orders o ON u.user_id = o.user_id
LEFT JOIN Orders_Games og ON og.order_id = o.order_id
LEFT JOIN Games g ON g.game_id = og.game_id
GROUP BY u.nickname ORDER BY total_cost HAVING sum(g.cost) > 0;
**************************

********* ЗАПРОС *********
SELECT u.nickname, SUM(g.cost) AS total_cost FROM Users u
LEFT JOIN Orders o ON u.user_id = o.user_id
LEFT JOIN Orders_Games og ON og.order_id = o.order_id
LEFT JOIN Games g ON g.game_id = og.game_id
GROUP BY u.nickname HAVING sum(g.cost) > 0  ORDER BY total_cost;
**************************

 nickname  | total_cost 
-----------+------------
 ffussella |     119.97
(1 строка)

********* ЗАПРОС *********
SELECT u.nickname, SUM(g.cost) AS total_cost FROM Users u
LEFT JOIN Orders o ON u.user_id = o.user_id
LEFT JOIN Orders_Games og ON og.order_id = o.order_id
LEFT JOIN Games g ON g.game_id = og.game_id
GROUP BY u.nickname HAVING sum(g.cost) > 0 ORDER BY total_cost;
**************************

 nickname  | total_cost 
-----------+------------
 ffussella |     119.97
(1 строка)

********* ЗАПРОС *********
UPDATE Orders
SET amount = (
    SELECT SUM(Games.cost)
    FROM Orders_Games
    JOIN Games ON Orders_Games.game_id = Games.game_id
    WHERE Orders_Games.order_id = Orders.order_id
)
WHERE order_id = 8;
**************************

UPDATE 1
********* ЗАПРОС *********
SELECT u.nickname o.order_id
FROM Users u
INNER JOIN Orders o
ON u.user_id = o.user_id;
**************************

           Список отношений
 Схема  |  Имя   |   Тип   | Владелец  
--------+--------+---------+-----------
 public | orders | таблица | westcrime
(1 строка)

********* ЗАПРОС *********
;
**************************

                Список отношений
 Схема  |       Имя       |   Тип   | Владелец  
--------+-----------------+---------+-----------
 public | carts           | таблица | westcrime
 public | categories      | таблица | westcrime
 public | games           | таблица | westcrime
 public | libraries       | таблица | westcrime
 public | orders          | таблица | westcrime
 public | orders_games    | таблица | westcrime
 public | payments        | таблица | westcrime
 public | platforms       | таблица | westcrime
 public | platforms_games | таблица | westcrime
 public | publishers      | таблица | westcrime
 public | reviews         | таблица | westcrime
 public | roles           | таблица | westcrime
 public | user_logs       | таблица | westcrime
 public | users           | таблица | westcrime
(14 строк)

********* ЗАПРОС *********
Select * from orders
;
**************************

 order_id | user_id | order_date |        status        | amount 
----------+---------+------------+----------------------+--------
        6 |       2 | 2023-10-30 | Заказ не сформирован |    0.0
        5 |       1 | 2023-10-30 | Заказ не сформирован |       
        7 |      11 | 2023-10-30 | Заказ ждет оплаты    |  39.99
        8 |      11 | 2023-10-31 | Заказ не сформирован |  79.98
(4 строки)

********* ЗАПРОС *********
SELECT u.nickname, SUM(g.cost) AS total_cost FROM Users u
LEFT JOIN Orders o ON u.user_id = o.user_id
LEFT JOIN Orders_Games og ON og.order_id = o.order_id
LEFT JOIN Games g ON g.game_id = og.game_id
GROUP BY u.nickname HAVING sum(g.cost) > 0 ORDER BY total_cost;
**************************

 nickname  | total_cost 
-----------+------------
 ffussella |     119.97
(1 строка)

********* ЗАПРОС *********
SELECT u.nickname o.order_id
FROM Users u
INNER JOIN Orders o
ON u.user_id = o.user_id;
**************************

********* ЗАПРОС *********
SELECT u.nickname o.user_id
FROM Users u
INNER JOIN Orders o
ON u.user_id = o.user_id;
**************************

********* ЗАПРОС *********
SELECT u.nickname Orders.user_id
FROM Users u
INNER JOIN Orders
ON u.user_id = o.user_id;
**************************

********* ЗАПРОС *********
SELECT u.nickname, o.user_id
FROM Users u
INNER JOIN Orders o
ON u.user_id = o.user_id;
**************************

  nickname  | user_id 
------------+---------
 tmccroft1  |       2
 lcolbourn0 |       1
 ffussella  |      11
 ffussella  |      11
(4 строки)

********* ЗАПРОС *********
SELECT u.nickname, o.order_id
FROM Users u
INNER JOIN Orders o
ON u.user_id = o.user_id;
**************************

  nickname  | order_id 
------------+----------
 tmccroft1  |        6
 lcolbourn0 |        5
 ffussella  |        7
 ffussella  |        8
(4 строки)

********* ЗАПРОС *********
SELECT u.nickname, o.order_id
FROM Users u
Right JOIN Orders o
ON u.user_id = o.user_id;
**************************

  nickname  | order_id 
------------+----------
 tmccroft1  |        6
 lcolbourn0 |        5
 ffussella  |        7
 ffussella  |        8
(4 строки)

********* ЗАПРОС *********
SELECT name FROM Games
WHERE publisher_id = (SELECT publisher_id FROM Publishers WHERE publisher_name IN ("EA", "Ubisoft"));
**************************

********* ЗАПРОС *********
SELECT name FROM Games
WHERE publisher_id = (SELECT publisher_id FROM Publishers WHERE name IN ("EA", "Ubisoft"));
**************************

********* ЗАПРОС *********
SELECT name FROM Games
WHERE publisher_id = (SELECT publisher_id FROM Publishers WHERE name IN ('EA', 'Ubisoft'));
**************************

********* ЗАПРОС *********
SELECT name FROM Games
WHERE publisher_id in (SELECT publisher_id FROM Publishers WHERE name IN ('EA', 'Ubisoft'));
**************************

             name              
-------------------------------
 FIFA 22
 Assassins Creed Valhalla
 Mass Effect Legendary Edition
 Far Cry 6
(4 строки)

********* ЗАПРОС *********
SELECT nickname, COUNT(l.game_id) FROM Users u
LEFT JOIN Libraries l ON u.user_id = l.user_id;
**************************

********* ЗАПРОС *********
SELECT u.nickname, COUNT(l.game_id) FROM Users u
LEFT JOIN Libraries l ON u.user_id = l.user_id;
**************************

********* ЗАПРОС *********
SELECT COUNT(u.nickname), COUNT(l.game_id) FROM Users u
LEFT JOIN Libraries l ON u.user_id = l.user_id;
**************************

 count | count 
-------+-------
    22 |     6
(1 строка)

********* ЗАПРОС *********
SELECT u.nickname, COUNT(l.game_id) AS count_of_games FROM Users u
LEFT JOIN Libraries l ON u.user_id = l.user_id
GROUP BY u.nickname HAVING COUNT(l.game_id > 0) ORDER BY count_of_games;
**************************

********* ЗАПРОС *********
SELECT u.nickname, COUNT(l.game_id) AS count_of_games FROM Users u
LEFT JOIN Libraries l ON u.user_id = l.user_id
GROUP BY u.nickname HAVING COUNT(l.game_id) > 0 ORDER BY count_of_games;
**************************

  nickname  | count_of_games 
------------+----------------
 tmccroft1  |              1
 lcolbourn0 |              1
 haggott2   |              1
 thawke     |              3
(4 строки)

********* ЗАПРОС *********
SELECT g.name, COUNT(l.game_id) AS copies_sold FROM Games g
LEFT JOIN Libraries l ON g.game_id = l.game_id
GROUP BY g.name HAVING COUNT(l.game_id) > 0 ORDER BY copies_sold;
**************************

         name          | copies_sold 
-----------------------+-------------
 Fallout 4             |           1
 Red Dead Redemption 2 |           1
 Call of Duty: Warzone |           1
 FIFA 22               |           3
(4 строки)

********* ЗАПРОС *********
SELECT g.name, COUNT(l.game_id) AS copies_sold FROM Games g
LEFT JOIN Libraries l ON g.game_id = l.game_id
GROUP BY g.name ORDER BY copies_sold;
**************************

             name              | copies_sold 
-------------------------------+-------------
 Assassins Creed Valhalla      |           0
 Diablo IV                     |           0
 Mass Effect Legendary Edition |           0
 Far Cry 6                     |           0
 Grand Theft Auto V            |           0
 The Elder Scrolls V: Skyrim   |           0
 Call of Duty: Warzone         |           1
 Red Dead Redemption 2         |           1
 Fallout 4                     |           1
 FIFA 22                       |           3
(10 строк)

********* ЗАПРОС *********
SELECT name, cost, publisher_id, SUM(cost) OVER (PARTITION BY publisher_id) AS 'cost_of_games_from_unique_publisher'
FROM Games;
**************************

********* ЗАПРОС *********
SELECT name, cost, publisher_id, SUM(cost) OVER (PARTITION BY publisher_id) AS cost_of_games_from_unique_publisher 
FROM Games;
**************************

             name              | cost  | publisher_id | cost_of_games_from_unique_publisher 
-------------------------------+-------+--------------+-------------------------------------
 FIFA 22                       | 39.99 |            1 |                               89.98
 Mass Effect Legendary Edition | 49.99 |            1 |                               89.98
 Assassins Creed Valhalla      | 19.99 |            2 |                               59.98
 Far Cry 6                     | 39.99 |            2 |                               59.98
 Call of Duty: Warzone         |   0.0 |            3 |                               29.99
 Diablo IV                     | 29.99 |            3 |                               29.99
 Fallout 4                     |  9.99 |            4 |                               39.98
 The Elder Scrolls V: Skyrim   | 29.99 |            4 |                               39.98
 Grand Theft Auto V            | 39.99 |            5 |                               79.98
 Red Dead Redemption 2         | 39.99 |            5 |                               79.98
(10 строк)

********* ЗАПРОС *********
SELECT name, cost, publisher_id, SUM(cost) OVER (PARTITION BY publisher_id ORDER BY publisher_id) AS cost_of_games_from_unique_publisher 
FROM Games;
**************************

             name              | cost  | publisher_id | cost_of_games_from_unique_publisher 
-------------------------------+-------+--------------+-------------------------------------
 FIFA 22                       | 39.99 |            1 |                               89.98
 Mass Effect Legendary Edition | 49.99 |            1 |                               89.98
 Assassins Creed Valhalla      | 19.99 |            2 |                               59.98
 Far Cry 6                     | 39.99 |            2 |                               59.98
 Call of Duty: Warzone         |   0.0 |            3 |                               29.99
 Diablo IV                     | 29.99 |            3 |                               29.99
 Fallout 4                     |  9.99 |            4 |                               39.98
 The Elder Scrolls V: Skyrim   | 29.99 |            4 |                               39.98
 Grand Theft Auto V            | 39.99 |            5 |                               79.98
 Red Dead Redemption 2         | 39.99 |            5 |                               79.98
(10 строк)

********* ЗАПРОС *********
SELECT name, cost, publisher_id, MAX(cost) OVER (PARTITION BY publisher_id ORDER BY publisher_id) AS largest_cost_of_most_exp_game 
FROM Games;
**************************

             name              | cost  | publisher_id | largest_cost_of_most_exp_game 
-------------------------------+-------+--------------+-------------------------------
 FIFA 22                       | 39.99 |            1 |                         49.99
 Mass Effect Legendary Edition | 49.99 |            1 |                         49.99
 Assassins Creed Valhalla      | 19.99 |            2 |                         39.99
 Far Cry 6                     | 39.99 |            2 |                         39.99
 Call of Duty: Warzone         |   0.0 |            3 |                         29.99
 Diablo IV                     | 29.99 |            3 |                         29.99
 Fallout 4                     |  9.99 |            4 |                         29.99
 The Elder Scrolls V: Skyrim   | 29.99 |            4 |                         29.99
 Grand Theft Auto V            | 39.99 |            5 |                         39.99
 Red Dead Redemption 2         | 39.99 |            5 |                         39.99
(10 строк)

********* ЗАПРОС *********
SELECT publisher_id, MAX(cost) OVER (PARTITION BY publisher_id ORDER BY publisher_id) AS largest_cost_of_most_exp_game 
FROM Games GROUP BY publisher_id;
**************************

********* ЗАПРОС *********
SELECT name, cost, publisher_id, COUNT(game_id) OVER (PARTITION BY publisher_id ORDER BY name) AS number_of_games_from_this_publisher 
FROM Games;
**************************

             name              | cost  | publisher_id | number_of_games_from_this_publisher 
-------------------------------+-------+--------------+-------------------------------------
 FIFA 22                       | 39.99 |            1 |                                   1
 Mass Effect Legendary Edition | 49.99 |            1 |                                   2
 Assassins Creed Valhalla      | 19.99 |            2 |                                   1
 Far Cry 6                     | 39.99 |            2 |                                   2
 Call of Duty: Warzone         |   0.0 |            3 |                                   1
 Diablo IV                     | 29.99 |            3 |                                   2
 Fallout 4                     |  9.99 |            4 |                                   1
 The Elder Scrolls V: Skyrim   | 29.99 |            4 |                                   2
 Grand Theft Auto V            | 39.99 |            5 |                                   1
 Red Dead Redemption 2         | 39.99 |            5 |                                   2
(10 строк)

********* ЗАПРОС *********
SELECT name, cost, publisher_id, COUNT(game_id) OVER (PARTITION BY publisher_id) AS number_of_games_from_this_publisher 
FROM Games;
**************************

             name              | cost  | publisher_id | number_of_games_from_this_publisher 
-------------------------------+-------+--------------+-------------------------------------
 FIFA 22                       | 39.99 |            1 |                                   2
 Mass Effect Legendary Edition | 49.99 |            1 |                                   2
 Assassins Creed Valhalla      | 19.99 |            2 |                                   2
 Far Cry 6                     | 39.99 |            2 |                                   2
 Call of Duty: Warzone         |   0.0 |            3 |                                   2
 Diablo IV                     | 29.99 |            3 |                                   2
 Fallout 4                     |  9.99 |            4 |                                   2
 The Elder Scrolls V: Skyrim   | 29.99 |            4 |                                   2
 Grand Theft Auto V            | 39.99 |            5 |                                   2
 Red Dead Redemption 2         | 39.99 |            5 |                                   2
(10 строк)

********* ЗАПРОС *********
SELECT g.name, COUNT(r.review_id) AS number_of_reviews FROM Games g
LEFT JOIN Reviews r ON r.game_id = g.game_id
GROUP BY g.name HAVING COUNT(r.review_id) > 0 ORDER BY number_of_reviews;
**************************

            name             | number_of_reviews 
-----------------------------+-------------------
 Fallout 4                   |                 1
 Red Dead Redemption 2       |                 1
 The Elder Scrolls V: Skyrim |                 1
 Assassins Creed Valhalla    |                 1
 Call of Duty: Warzone       |                 1
 FIFA 22                     |                 2
(6 строк)

********* ЗАПРОС *********
SELECT COUNT(user_id)
    FROM Libraries
    GROUP BY user_id;
**************************

 count 
-------
     3
     1
     1
     1
(4 строки)

********* ЗАПРОС *********
SELECT user_id, COUNT(game_id)
    FROM Libraries
    GROUP BY user_id;
**************************

 user_id | count 
---------+-------
      15 |     3
       3 |     1
       2 |     1
       1 |     1
(4 строки)

********* ЗАПРОС *********
SELECT nickname
FROM Users u
WHERE EXISTS (
    SELECT user_id, COUNT(game_id)
    FROM Libraries WHERE u.id = user_id
    GROUP BY user_id;
);
**************************

********* ЗАПРОС *********
84;
**************************

********* ЗАПРОС *********
6u
SELECT nickname
FROM Users u
WHERE EXISTS (
    SELECT user_id
    FROM Libraries
    WHERE u.id = Libraries.user_id
    GROUP BY user_id
    HAVING COUNT(game_id) > 5
);
**************************

********* ЗАПРОС *********
SELECT nickname
FROM Users u
WHERE EXISTS (
    SELECT user_id
    FROM Libraries
    WHERE u.id = Libraries.user_id
    GROUP BY user_id
    HAVING COUNT(game_id) > 5
);
**************************

********* ЗАПРОС *********
SELECT nickname
FROM Users u
WHERE EXISTS (
    SELECT user_id
    FROM Libraries
    WHERE u.user_id = Libraries.user_id
    GROUP BY user_id
    HAVING COUNT(game_id) > 5
);
**************************

 nickname 
----------
(0 строк)

********* ЗАПРОС *********
EXPLAIN SELECT u.nickname, SUM(g.cost) AS total_cost FROM Users u
LEFT JOIN Orders o ON u.user_id = o.user_id
LEFT JOIN Orders_Games og ON og.order_id = o.order_id
LEFT JOIN Games g ON g.game_id = og.game_id
GROUP BY u.nickname HAVING sum(g.cost) > 0 ORDER BY total_cost;
**************************

                                           QUERY PLAN                                            
-------------------------------------------------------------------------------------------------
 Sort  (cost=108.34..108.43 rows=37 width=150)
   Sort Key: (sum(g.cost))
   ->  HashAggregate  (cost=105.72..107.37 rows=37 width=150)
         Group Key: u.nickname
         Filter: (sum(g.cost) > '0'::numeric)
         ->  Hash Left Join  (cost=43.72..94.42 rows=2260 width=150)
               Hash Cond: (og.game_id = g.game_id)
               ->  Hash Right Join  (cost=31.92..76.57 rows=2260 width=122)
                     Hash Cond: (o.user_id = u.user_id)
                     ->  Hash Right Join  (cost=19.45..58.04 rows=2260 width=8)
                           Hash Cond: (og.order_id = o.order_id)
                           ->  Seq Scan on orders_games og  (cost=0.00..32.60 rows=2260 width=8)
                           ->  Hash  (cost=14.20..14.20 rows=420 width=8)
                                 ->  Seq Scan on orders o  (cost=0.00..14.20 rows=420 width=8)
                     ->  Hash  (cost=11.10..11.10 rows=110 width=122)
                           ->  Seq Scan on users u  (cost=0.00..11.10 rows=110 width=122)
               ->  Hash  (cost=10.80..10.80 rows=80 width=36)
                     ->  Seq Scan on games g  (cost=0.00..10.80 rows=80 width=36)
(18 строк)

             Список отношений
 Схема  |    Имя    |   Тип   | Владелец  
--------+-----------+---------+-----------
 public | user_logs | таблица | westcrime
(1 строка)

********* ЗАПРОС *********
select * from user_logs
;
**************************

 user_log_id | user_id | date_of_event | description 
-------------+---------+---------------+-------------
(0 строк)

********* ЗАПРОС *********
select * from users
;
**************************

 user_id |  nickname   |                           password                           |            email            | role_id | profile_pic_path | balance 
---------+-------------+--------------------------------------------------------------+-----------------------------+---------+------------------+---------
       1 | lcolbourn0  | $2a$04$EW4zWKiZAPRdqvz/dqb6K.3qA26GLjsT8ZBAQDpb6JFjDEqGxbVuW | tfance0@jalbum.net          |       1 |                  |   39.59
       2 | tmccroft1   | $2a$04$PUPWHe6OdiBe63iyJY1M9esrxfexyMDqwgEfqOIwQn9MVE4UwTcri | ebattey1@booking.com        |       1 |                  |    6.01
       3 | haggott2    | $2a$04$0O9fgMOopSKo5nIgbK4FYukOtGhS55MrBnQNQV4wpC6VDShwozJkC | drubens2@i2i.jp             |       1 |                  |    4.82
       4 | rgrolmann3  | $2a$04$jjgLBhQBaa7ZScTJtsZKx.96LCPHgxoYblm3iETgE.KzoMMzV5bIi | eclemmen3@liveinternet.ru   |       1 |                  |   38.09
       5 | vmacklam4   | $2a$04$V/Q98ejholWc59WWu22WG.RHvp9KnCZIWwssqNbvHAvCOPK884pLq | deberst4@nifty.com          |       1 |                  |   87.45
       6 | zvannozzii5 | $2a$04$M4985O7tBQwhM9gq3sQMtOb0VPecCd5O6PR4UiVfpgIr86nr6Xx4W | dellin5@dailymotion.com     |       1 |                  |   10.13
       7 | rcreasy6    | $2a$04$uBNelcgZUbgeYtLVj4UdoedTIiYIZlk2MDQ43vphxnnBNmvfk8IKi | mfigliovanni6@myspace.com   |       1 |                  |   67.49
       8 | ltchir7     | $2a$04$bFkCYx1ZNXor8oYhVf3rf.HzNLbPszFPLi9JYOvlVBaCOv2FnJleG | mziems7@statcounter.com     |       1 |                  |    4.27
       9 | jnovello8   | $2a$04$lyh9YbopC.RgEipupXkwkeY6TDjNQLf0DuitjGkgk2dv9vphwO1wW | bwillder8@cisco.com         |       1 |                  |   42.43
      10 | wbahde9     | $2a$04$NAp7qPF/O8EQNdTfwsU8UONZFMek3VYn/bQ1S5shDsTZIcsizzMTe | lchalk9@sitemeter.com       |       1 |                  |   48.88
      11 | ffussella   | $2a$04$wSnENb5it6GVlhNRL7So0.3CUQM7WUnCjRxaByFkuQ.yzZRCFXNSm | gcallena@princeton.edu      |       1 |                  |   84.91
      12 | clawmanb    | $2a$04$iLWdN72.v/Y7CUyuKUGgv.iosFV6unKvko9cVvGYPLQJJ9Tn6zjsa | mmenatb@craigslist.org      |       1 |                  |   16.03
      13 | rcaugheyc   | $2a$04$xpSvGGLxe3PoitYQGf7RS.6Iqi4QiqOcrotBO.4hpC8gKTeXgYC6q | rmuckeenc@prnewswire.com    |       1 |                  |   29.03
      14 | morwelld    | $2a$04$vikADNuesvfv8J2RyrdO.emsr4S4PKAOWr8d2hJOvw65RgrfnJHG6 | foloned@amazon.de           |       1 |                  |   80.17
      15 | thawke      | $2a$04$Io0JG1rYGrWLYK8lWnjXnemJzcHGvG28EJ.7buA0aDsABC0wxuk/m | ecrowchee@technorati.com    |       1 |                  |   26.11
      16 | rmolloyf    | $2a$04$Y1Uwk09GFKLzIEqOUgALsuLVBcvOxqROr/SLRpfAKw8OENYEelMai | ydaelmanf@elegantthemes.com |       1 |                  |    64.7
      17 | bmelliardg  | $2a$04$WRNJmH.8ILrgbpweYKvlcuaX4NOXRh5rCm3oclfiN.6wvKib8RUG. | mpefferg@marriott.com       |       1 |                  |   17.51
      18 | cskehanh    | $2a$04$b54zy6G1RCp/KZPpGFOXsuFaViQrgPAdntb0zvjK.ICMEeOKhC/3O | jgasnellh@cbslocal.com      |       1 |                  |   23.76
      19 | dhurnelli   | $2a$04$CWh9fdT.1yJvW4MLqReqJ.v8PS/u4isRXW1hDPXGO8bC5TvDQJg76 | acokei@washington.edu       |       1 |                  |    2.45
      20 | bhendersonj | $2a$04$GGxf.6ugg6ter/YSHTLU8e16ZG5c9sQdY569ouR47Jk5AjAUzNGNW | abriddenj@taobao.com        |       1 |                  |   58.56
(20 строк)

********* ЗАПРОС *********
select * from carts
;
**************************

 game_id | user_id 
---------+---------
       1 |       5
       1 |       6
       1 |       9
       3 |      16
      10 |      16
       9 |      16
(6 строк)

********* ЗАПРОС *********
CREATE OR REPLACE FUNCTION update_sum_of_order_trigger_function()
RETURNS TRIGGER AS $$
BEGIN
    UPDATE Orders
    SET amount = amount + NEW.cost
    WHERE order_id = NEW.order_id;
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;
**************************

CREATE FUNCTION
********* ЗАПРОС *********
CREATE TRIGGER update_sum_of_order_trigger
AFTER INSERT ON Orders_Games
FOR EACH ROW
EXECUTE FUNCTION update_sum_of_order_trigger_function();
**************************

CREATE TRIGGER
********* ЗАПРОС *********
CREATE OR REPLACE FUNCTION create_order_from_cart(user_id_param INT)
RETURNS VOID AS $$
DECLARE
    new_order_id INT;
BEGIN
    -- Создаем новую строку в таблице Orders для пользователя
    INSERT INTO Orders (user_id, order_date, status, amount)
    VALUES (user_id_param, CURRENT_DATE, 'Заказ ждет оплаты', 0)
    RETURNING order_id INTO new_order_id;

    -- Переносим игры из корзины пользователя в таблицу Orders_Games
    INSERT INTO Orders_Games (game_id, order_id)
    SELECT game_id, new_order_id
    FROM Carts
    WHERE user_id = user_id_param;
END;
$$ LANGUAGE plpgsql;
**************************

CREATE FUNCTION
********* ЗАПРОС *********
select * from orders
;
**************************

 order_id | user_id | order_date |        status        | amount 
----------+---------+------------+----------------------+--------
        6 |       2 | 2023-10-30 | Заказ не сформирован |    0.0
        5 |       1 | 2023-10-30 | Заказ не сформирован |       
        7 |      11 | 2023-10-30 | Заказ ждет оплаты    |  39.99
        8 |      11 | 2023-10-31 | Заказ не сформирован |  79.98
(4 строки)

********* ЗАПРОС *********
CALL create_order_from_cart(16);
**************************

********* ЗАПРОС *********
SELECT create_order_from_cart(16);
**************************

********* ЗАПРОС *********
select * from games
;
**************************

 game_id |             name              |                                       description                                       | publisher_id | category_id | cost  | picture_path 
---------+-------------------------------+-----------------------------------------------------------------------------------------+--------------+-------------+-------+--------------
       1 | FIFA 22                       | Футбольный симулятор с реалистичной графикой и улучшенным геймплеем.                    |            1 |           6 | 39.99 | 
       2 | Assassins Creed Valhalla      | RPG-приключение, в котором вы играете за викинга и исследуете древнюю Англию.           |            2 |           4 | 19.99 | 
       3 | Call of Duty: Warzone         | Бесплатный боевой рояль в мире Call of Duty с интенсивными онлайн-сражениями.           |            3 |           1 |   0.0 | 
       4 | The Elder Scrolls V: Skyrim   | Эпическая RPG с открытым миром, где вы исследуете фэнтезийное королевство.              |            4 |           2 | 29.99 | 
       5 | Grand Theft Auto V            | Открытый мир, где вы совершаете ограбления и исследуете фиктивный город Лос-Сантос.     |            5 |           4 | 39.99 | 
       6 | Mass Effect Legendary Edition | Сборник ролевых игр с улучшенной графикой и вселенной научной фантастики.               |            1 |           2 | 49.99 | 
       7 | Far Cry 6                     | Шутер с открытым миром, вас ожидает борьба с тиранией на тропическом острове.           |            2 |           1 | 39.99 | 
       8 | Diablo IV                     | RPG с мрачным фэнтезийным миром и борьбой с демонами.                                   |            3 |           2 | 29.99 | 
       9 | Fallout 4                     | Постапокалиптическая RPG с элементами выживания и исследования.                         |            4 |           2 |  9.99 | 
      10 | Red Dead Redemption 2         | Вестерн с ошеломляющей графикой, где вы отправляетесь в путешествие в конце 19-го века. |            5 |           6 | 39.99 | 
(10 строк)

********* ЗАПРОС *********
CREATE OR REPLACE FUNCTION update_sum_of_order_trigger_function()
RETURNS TRIGGER AS $$
BEGIN
    UPDATE Orders
    SET amount = amount + (SELECT cost FROM Games WHERE game_id = NEW.game_id)
    WHERE order_id = NEW.order_id;
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;
**************************

CREATE FUNCTION
********* ЗАПРОС *********
SELECT create_order_from_cart(16);
**************************

 create_order_from_cart 
------------------------
 
(1 строка)

********* ЗАПРОС *********
select & from orders
;
**************************

********* ЗАПРОС *********
select * from orders
;
**************************

 order_id | user_id | order_date |        status        | amount 
----------+---------+------------+----------------------+--------
        6 |       2 | 2023-10-30 | Заказ не сформирован |    0.0
        5 |       1 | 2023-10-30 | Заказ не сформирован |       
        7 |      11 | 2023-10-30 | Заказ ждет оплаты    |  39.99
        8 |      11 | 2023-10-31 | Заказ не сформирован |  79.98
       10 |      16 | 2023-11-21 | Заказ ждет оплаты    |  49.98
(5 строк)

********* ЗАПРОС *********
CREATE OR REPLACE FUNCTION get_avg_rating_of_game(game_id_param INT)
RETURNS DECIMAL AS $$
BEGIN
    SELECT AVG(rating) INTO avg_rating
    FROM Reviews
    WHERE game_id = game_id_param;

    RETURN avg_rating;
END;
$$ LANGUAGE plpgsql;
**************************

********* ЗАПРОС *********
CREATE OR REPLACE FUNCTION get_avg_rating_of_game(game_id_param INT)
RETURNS DECIMAL AS $$
DECLARE avg_rating DECIMAL;
BEGIN
    SELECT AVG(rating) INTO avg_rating
    FROM Reviews
    WHERE game_id = game_id_param;

    RETURN avg_rating;
END;
$$ LANGUAGE plpgsql;
**************************

CREATE FUNCTION
********* ЗАПРОС *********
select * from reviews
;
**************************

 review_id | user_id | game_id | rating |       description        
-----------+---------+---------+--------+--------------------------
         1 |       1 |       1 |      4 | Very cool game!
         2 |       1 |      10 |      5 | Masterpiece!
         3 |       2 |       3 |      3 | Good.
         4 |       5 |       4 |      4 | Nice open world!
         5 |       7 |       1 |      2 | Very bad product.
         6 |       7 |       9 |      5 | Masterpiece!
         7 |      15 |       2 |      5 | Waste of money and time!
(7 строк)

********* ЗАПРОС *********
select get_avg_rating_of_game(1);
**************************

 get_avg_rating_of_game 
------------------------
     3.0000000000000000
(1 строка)

********* ЗАПРОС *********
CREATE OR REPLACE FUNCTION post_message_in_log(message_param VARCHAR(250))
RETURN VOID AS $$
BEGIN
    RAISE NOTICE '%', message_param;
END;
$$ LANGUAGE plpgsql;
**************************

********* ЗАПРОС *********
CREATE OR REPLACE FUNCTION log_inserted_user()
RETURNS TRIGGER AS $$
DECLARE
    message VARCHAR(250);
BEGIN
    message := 'Новый пользователь с ID = ' || NEW.user_id || ' и именем = ' || NEW.nickname || ' был добавлен в таблицу.';

    PERFORM post_message_in_log(message);

    RETURN NEW;
END;
$$ LANGUAGE plpgsql;
**************************

CREATE FUNCTION
********* ЗАПРОС *********
CREATE TRIGGER insert_new_user_trigger
AFTER INSERT ON Users
FOR EACH ROW
EXECUTE FUNCTION log_inserted_user();
**************************

CREATE TRIGGER
********* ЗАПРОС *********
CREATE OR REPLACE FUNCTION log_updated_user_data()
RETURNS TRIGGER AS $$
DECLARE
    message VARCHAR(250);
BEGIN
    message := 'Данные пользователя с ID = ' || OLD.user_id || ' были обновлены.';

    IF OLD.nickname <> NEW.nickname THEN
        message := message || ' Изменено имя пользователя: ' || OLD.nickname || ' -> ' || NEW.nickname || '.';
    END IF;

    IF OLD.email <> NEW.email THEN
        message := message || ' Изменен адрес электронной почты: ' || OLD.email || ' -> ' || NEW.email || '.';
    END IF;

    IF OLD.balance <> NEW.balance THEN
        message := message || ' Пополнен баланс пользователя: ' || OLD.balance || ' -> ' || NEW.balance || '.';
    END IF;

    PERFORM post_message_in_log(message);

    RETURN NEW;
END;
$$ LANGUAGE plpgsql;
**************************

CREATE FUNCTION
********* ЗАПРОС *********
CREATE TRIGGER update_user_trigger
AFTER UPDATE ON Users
FOR EACH ROW
EXECUTE FUNCTION log_updated_user_data();
**************************

CREATE TRIGGER
********* ЗАПРОС *********
CREATE OR REPLACE FUNCTION log_deleted_user()
RETURNS TRIGGER AS $$
DECLARE
    message VARCHAR(250);
BEGIN
    message := 'Пользователь с ID = ' || OLD.user_id || ' и именем = ' || OLD.nickname || ' был удален.';

    PERFORM post_message_in_log(message);

    RETURN OLD;
END;
$$ LANGUAGE plpgsql;
**************************

CREATE FUNCTION
********* ЗАПРОС *********
CREATE TRIGGER delete_user_trigger
AFTER DELETE ON Users
FOR EACH ROW
EXECUTE FUNCTION log_deleted_user();
**************************

CREATE TRIGGER
********* ЗАПРОС *********
update users set nickname = 'dima' where user_id = 1
;
**************************

********* ЗАПРОС *********
D
-- Процедура выводящая сообщение в текущие логи
CREATE OR REPLACE FUNCTION post_message_in_log(message_param VARCHAR(250))
RETURN VOID AS $$
BEGIN
    RAISE NOTICE '%', message_param;
END;
$$ LANGUAGE plpgsql;
**************************

********* ЗАПРОС *********
CREATE OR REPLACE FUNCTION log_inserted_user()
RETURNS TRIGGER AS $$
DECLARE
    message VARCHAR(250);
BEGIN
    message := 'Новый пользователь с ID = ' || NEW.user_id || ' и именем = ' || NEW.nickname || ' был добавлен в таблицу.';

    PERFORM post_message_in_log(CAST(message AS VARCHAR)); -- Явное приведение типа

    RETURN NEW;
END;
$$ LANGUAGE plpgsql;
**************************

CREATE FUNCTION
********* ЗАПРОС *********
CREATE TRIGGER insert_new_user_trigger
AFTER INSERT ON Users
FOR EACH ROW
EXECUTE FUNCTION log_inserted_user();
**************************

********* ЗАПРОС *********
CREATE OR REPLACE FUNCTION log_updated_user_data()
RETURNS TRIGGER AS $$
DECLARE
    message VARCHAR(250);
BEGIN
    message := 'Данные пользователя с ID = ' || OLD.user_id || ' были обновлены.';

    IF OLD.nickname <> NEW.nickname THEN
        message := message || ' Изменено имя пользователя: ' || OLD.nickname || ' -> ' || NEW.nickname || '.';
    END IF;

    IF OLD.email <> NEW.email THEN
        message := message || ' Изменен адрес электронной почты: ' || OLD.email || ' -> ' || NEW.email || '.';
    END IF;

    IF OLD.balance <> NEW.balance THEN
        message := message || ' Пополнен баланс пользователя: ' || OLD.balance || ' -> ' || NEW.balance || '.';
    END IF;

    PERFORM post_message_in_log(CAST(message AS VARCHAR)); -- Явное приведение типа

    RETURN NEW;
END;
$$ LANGUAGE plpgsql;
**************************

CREATE FUNCTION
********* ЗАПРОС *********
CREATE TRIGGER update_user_trigger
AFTER UPDATE ON Users
FOR EACH ROW
EXECUTE FUNCTION log_updated_user_data();
**************************

********* ЗАПРОС *********
CREATE OR REPLACE FUNCTION log_deleted_user()
RETURNS TRIGGER AS $$
DECLARE
    message VARCHAR(250);
BEGIN
    message := 'Пользователь с ID = ' || OLD.user_id || ' и именем = ' || OLD.nickname || ' был удален.';

    PERFORM post_message_in_log(CAST(message AS VARCHAR)); -- Явное приведение типа

    RETURN OLD;
END;
$$ LANGUAGE plpgsql;
**************************

CREATE FUNCTION
********* ЗАПРОС *********
CREATE TRIGGER delete_user_trigger
AFTER DELETE ON Users
FOR EACH ROW
EXECUTE FUNCTION log_deleted_user();
**************************

********* ЗАПРОС *********
adsa

-- Процедура выводящая сообщение в текущие логи
CREATE OR REPLACE FUNCTION post_message_in_log(message_param VARCHAR(250))
RETURN VOID AS $$
BEGIN
    RAISE NOTICE '%', message_param;
END;
$$ LANGUAGE plpgsql;
**************************

********* ЗАПРОС *********
CREATE OR REPLACE FUNCTION log_inserted_user()
RETURNS TRIGGER AS $$
DECLARE
    message VARCHAR(250);
BEGIN
    message := 'Новый пользователь с ID = ' || NEW.user_id || ' и именем = ' || NEW.nickname || ' был добавлен в таблицу.';

    PERFORM post_message_in_log(CAST(message AS VARCHAR)); -- Явное приведение типа

    RETURN NEW;
END;
$$ LANGUAGE plpgsql;
**************************

CREATE FUNCTION
********* ЗАПРОС *********
CREATE TRIGGER insert_new_user_trigger
AFTER INSERT ON Users
FOR EACH ROW
EXECUTE FUNCTION log_inserted_user();
**************************

********* ЗАПРОС *********
CREATE OR REPLACE FUNCTION log_updated_user_data()
RETURNS TRIGGER AS $$
DECLARE
    message VARCHAR(250);
BEGIN
    message := 'Данные пользователя с ID = ' || OLD.user_id || ' были обновлены.';

    IF OLD.nickname <> NEW.nickname THEN
        message := message || ' Изменено имя пользователя: ' || OLD.nickname || ' -> ' || NEW.nickname || '.';
    END IF;

    IF OLD.email <> NEW.email THEN
        message := message || ' Изменен адрес электронной почты: ' || OLD.email || ' -> ' || NEW.email || '.';
    END IF;

    IF OLD.balance <> NEW.balance THEN
        message := message || ' Пополнен баланс пользователя: ' || OLD.balance || ' -> ' || NEW.balance || '.';
    END IF;

    PERFORM post_message_in_log(CAST(message AS VARCHAR)); -- Явное приведение типа

    RETURN NEW;
END;
$$ LANGUAGE plpgsql;
**************************

CREATE FUNCTION
********* ЗАПРОС *********
CREATE TRIGGER update_user_trigger
AFTER UPDATE ON Users
FOR EACH ROW
EXECUTE FUNCTION log_updated_user_data();
**************************

********* ЗАПРОС *********
CREATE OR REPLACE FUNCTION log_deleted_user()
RETURNS TRIGGER AS $$
DECLARE
    message VARCHAR(250);
BEGIN
    message := 'Пользователь с ID = ' || OLD.user_id || ' и именем = ' || OLD.nickname || ' был удален.';

    PERFORM post_message_in_log(CAST(message AS VARCHAR)); -- Явное приведение типа

    RETURN OLD;
END;
$$ LANGUAGE plpgsql;
**************************

CREATE FUNCTION
********* ЗАПРОС *********
CREATE TRIGGER delete_user_trigger
AFTER DELETE ON Users
FOR EACH ROW
EXECUTE FUNCTION log_deleted_user();
**************************

********* ЗАПРОС *********
update users set nickname = 'Dima' where user_id=1;
**************************

********* ЗАПРОС *********
CREATE OR REPLACE FUNCTION post_message_in_log(message_param character varying(250))
RETURN VOID AS $$
BEGIN
    RAISE NOTICE '%', message_param;
END;
$$ LANGUAGE plpgsql;
**************************

********* ЗАПРОС *********
CREATE OR REPLACE FUNCTION log_inserted_user()
RETURNS TRIGGER AS $$
DECLARE
    message VARCHAR(250);
BEGIN
    message := 'Новый пользователь с ID = ' || NEW.user_id || ' и именем = ' || NEW.nickname || ' был добавлен в таблицу.';

    PERFORM post_message_in_log(message);

    RETURN NEW;
END;
$$ LANGUAGE plpgsql;
**************************

CREATE FUNCTION
********* ЗАПРОС *********
CREATE TRIGGER insert_new_user_trigger
AFTER INSERT ON Users
FOR EACH ROW
EXECUTE FUNCTION log_inserted_user();
**************************

********* ЗАПРОС *********
CREATE OR REPLACE FUNCTION log_updated_user_data()
RETURNS TRIGGER AS $$
DECLARE
    message VARCHAR(250);
BEGIN
    message := 'Данные пользователя с ID = ' || OLD.user_id || ' были обновлены.';

    IF OLD.nickname <> NEW.nickname THEN
        message := message || ' Изменено имя пользователя: ' || OLD.nickname || ' -> ' || NEW.nickname || '.';
    END IF;

    IF OLD.email <> NEW.email THEN
        message := message || ' Изменен адрес электронной почты: ' || OLD.email || ' -> ' || NEW.email || '.';
    END IF;

    IF OLD.balance <> NEW.balance THEN
        message := message || ' Пополнен баланс пользователя: ' || OLD.balance || ' -> ' || NEW.balance || '.';
    END IF;

    PERFORM post_message_in_log(message);

    RETURN NEW;
END;
$$ LANGUAGE plpgsql;
**************************

CREATE FUNCTION
********* ЗАПРОС *********
CREATE TRIGGER update_user_trigger
AFTER UPDATE ON Users
FOR EACH ROW
EXECUTE FUNCTION log_updated_user_data();
**************************

********* ЗАПРОС *********
CREATE OR REPLACE FUNCTION log_deleted_user()
RETURNS TRIGGER AS $$
DECLARE
    message VARCHAR(250);
BEGIN
    message := 'Пользователь с ID = ' || OLD.user_id || ' и именем = ' || OLD.nickname || ' был удален.';

    PERFORM post_message_in_log(message);

    RETURN OLD;
END;
$$ LANGUAGE plpgsql;
**************************

CREATE FUNCTION
********* ЗАПРОС *********
CREATE TRIGGER delete_user_trigger
AFTER DELETE ON Users
FOR EACH ROW
EXECUTE FUNCTION log_deleted_user();
**************************

********* ЗАПРОС *********
CREATE OR REPLACE FUNCTION post_message_in_log(message_param character varying(250))
RETURN VOID AS $$
BEGIN
    RAISE NOTICE '%', message_param;
END;
$$ LANGUAGE plpgsql;
**************************

********* ЗАПРОС *********
CREATE OR REPLACE FUNCTION log_inserted_user()
RETURNS TRIGGER AS $$
DECLARE
    message VARCHAR(250);
BEGIN
    message := 'Новый пользователь с ID = ' || NEW.user_id || ' и именем = ' || NEW.nickname || ' был добавлен в таблицу.';

    PERFORM post_message_in_log(message);

    RETURN NEW;
END;
$$ LANGUAGE plpgsql;
**************************

CREATE FUNCTION
********* ЗАПРОС *********
CREATE OR REPLACE TRIGGER insert_new_user_trigger
AFTER INSERT ON Users
FOR EACH ROW
EXECUTE FUNCTION log_inserted_user();
**************************

CREATE TRIGGER
********* ЗАПРОС *********
CREATE OR REPLACE FUNCTION log_updated_user_data()
RETURNS TRIGGER AS $$
DECLARE
    message VARCHAR(250);
BEGIN
    message := 'Данные пользователя с ID = ' || OLD.user_id || ' были обновлены.';

    IF OLD.nickname <> NEW.nickname THEN
        message := message || ' Изменено имя пользователя: ' || OLD.nickname || ' -> ' || NEW.nickname || '.';
    END IF;

    IF OLD.email <> NEW.email THEN
        message := message || ' Изменен адрес электронной почты: ' || OLD.email || ' -> ' || NEW.email || '.';
    END IF;

    IF OLD.balance <> NEW.balance THEN
        message := message || ' Пополнен баланс пользователя: ' || OLD.balance || ' -> ' || NEW.balance || '.';
    END IF;

    PERFORM post_message_in_log(message);

    RETURN NEW;
END;
$$ LANGUAGE plpgsql;
**************************

CREATE FUNCTION
********* ЗАПРОС *********
CREATE OR REPLACE TRIGGER update_user_trigger
AFTER UPDATE ON Users
FOR EACH ROW
EXECUTE FUNCTION log_updated_user_data();
**************************

CREATE TRIGGER
********* ЗАПРОС *********
CREATE OR REPLACE FUNCTION log_deleted_user()
RETURNS TRIGGER AS $$
DECLARE
    message VARCHAR(250);
BEGIN
    message := 'Пользователь с ID = ' || OLD.user_id || ' и именем = ' || OLD.nickname || ' был удален.';

    PERFORM post_message_in_log(message);

    RETURN OLD;
END;
$$ LANGUAGE plpgsql;
**************************

CREATE FUNCTION
********* ЗАПРОС *********
CREATE OR REPLACE TRIGGER delete_user_trigger
AFTER DELETE ON Users
FOR EACH ROW
EXECUTE FUNCTION log_deleted_user();
**************************

CREATE TRIGGER
********* ЗАПРОС *********
CREATE OR REPLACE FUNCTION post_message_in_log(message_param character varying(250))
RETURNS VOID AS $$
BEGIN
    RAISE NOTICE '%', message_param;
END;
$$ LANGUAGE plpgsql;
**************************

CREATE FUNCTION
********* ЗАПРОС *********
CREATE OR REPLACE FUNCTION log_inserted_user()
RETURNS TRIGGER AS $$
DECLARE
    message VARCHAR(250);
BEGIN
    message := 'Новый пользователь с ID = ' || NEW.user_id || ' и именем = ' || NEW.nickname || ' был добавлен в таблицу.';

    PERFORM post_message_in_log(message);

    RETURN NEW;
END;
$$ LANGUAGE plpgsql;
**************************

CREATE FUNCTION
********* ЗАПРОС *********
CREATE OR REPLACE TRIGGER insert_new_user_trigger
AFTER INSERT ON Users
FOR EACH ROW
EXECUTE FUNCTION log_inserted_user();
**************************

CREATE TRIGGER
********* ЗАПРОС *********
CREATE OR REPLACE FUNCTION log_updated_user_data()
RETURNS TRIGGER AS $$
DECLARE
    message VARCHAR(250);
BEGIN
    message := 'Данные пользователя с ID = ' || OLD.user_id || ' были обновлены.';

    IF OLD.nickname <> NEW.nickname THEN
        message := message || ' Изменено имя пользователя: ' || OLD.nickname || ' -> ' || NEW.nickname || '.';
    END IF;

    IF OLD.email <> NEW.email THEN
        message := message || ' Изменен адрес электронной почты: ' || OLD.email || ' -> ' || NEW.email || '.';
    END IF;

    IF OLD.balance <> NEW.balance THEN
        message := message || ' Пополнен баланс пользователя: ' || OLD.balance || ' -> ' || NEW.balance || '.';
    END IF;

    PERFORM post_message_in_log(message);

    RETURN NEW;
END;
$$ LANGUAGE plpgsql;
**************************

CREATE FUNCTION
********* ЗАПРОС *********
CREATE OR REPLACE TRIGGER update_user_trigger
AFTER UPDATE ON Users
FOR EACH ROW
EXECUTE FUNCTION log_updated_user_data();
**************************

CREATE TRIGGER
********* ЗАПРОС *********
CREATE OR REPLACE FUNCTION log_deleted_user()
RETURNS TRIGGER AS $$
DECLARE
    message VARCHAR(250);
BEGIN
    message := 'Пользователь с ID = ' || OLD.user_id || ' и именем = ' || OLD.nickname || ' был удален.';

    PERFORM post_message_in_log(message);

    RETURN OLD;
END;
$$ LANGUAGE plpgsql;
**************************

CREATE FUNCTION
********* ЗАПРОС *********
CREATE OR REPLACE TRIGGER delete_user_trigger
AFTER DELETE ON Users
FOR EACH ROW
EXECUTE FUNCTION log_deleted_user();
**************************

CREATE TRIGGER
********* ЗАПРОС *********
update users ser nickname = 'Dima' where user_id = 1
;
**************************

********* ЗАПРОС *********
update users set nickname = 'Dima' where user_id = 1
;
**************************

UPDATE 1
********* ЗАПРОС *********
CREATE OR REPLACE FUNCTION log_inserted_game()
RETURNS TRIGGER AS $$
DECLARE
    message VARCHAR(250);
BEGIN
    message := 'Новая игра с ID = ' || NEW.game_id || ' и названием = ' || NEW.name || ' была добавлена в таблицу.';

    PERFORM post_message_in_log(message);

    RETURN NEW;
END;
$$ LANGUAGE plpgsql;
**************************

CREATE FUNCTION
********* ЗАПРОС *********
CREATE TRIGGER insert_new_game_trigger
AFTER INSERT ON Games
FOR EACH ROW
EXECUTE FUNCTION log_inserted_game();
**************************

CREATE TRIGGER
********* ЗАПРОС *********
CREATE OR REPLACE FUNCTION log_updated_game_data()
RETURNS TRIGGER AS $$
DECLARE
    message VARCHAR(250);
BEGIN
    message := 'Данные об игре с ID = ' || OLD.game_id || ' были обновлены.';

    IF OLD.name <> NEW.name THEN
        message := message || ' Изменено название игры: ' || OLD.name || ' -> ' || NEW.name || '.';
    END IF;

    IF OLD.category_id <> NEW.category_id THEN
        message := message || ' Изменен жанр игры: ' || OLD.category_id || ' -> ' || NEW.category_id || '.';
    END IF;

    IF OLD.cost <> NEW.cost THEN
        message := message || ' Изменена стоимость игры: ' || OLD.cost || ' -> ' || NEW.cost || '.';
    END IF;

    PERFORM post_message_in_log(message);

    RETURN NEW;
END;
$$ LANGUAGE plpgsql;
**************************

CREATE FUNCTION
********* ЗАПРОС *********
CREATE TRIGGER update_game_trigger
AFTER UPDATE ON Games
FOR EACH ROW
EXECUTE FUNCTION log_updated_game_data();
**************************

CREATE TRIGGER
********* ЗАПРОС *********
CREATE OR REPLACE FUNCTION log_deleted_game()
RETURNS TRIGGER AS $$
DECLARE
    message VARCHAR(250);
BEGIN
    message := 'Игра с ID = ' || OLD.game_id || ' и названием = ' || OLD.name || ' была удалена.';

    PERFORM post_message_in_log(message);

    RETURN OLD;
END;
$$ LANGUAGE plpgsql;
**************************

CREATE FUNCTION
********* ЗАПРОС *********
CREATE TRIGGER delete_game_trigger
AFTER DELETE ON Games
FOR EACH ROW
EXECUTE FUNCTION log_deleted_game();
**************************

CREATE TRIGGER
********* ЗАПРОС *********
clraCREATE OR REPLACE FUNCTION log_inserted_game()
RETURNS TRIGGER AS $$
DECLARE
    message VARCHAR(250);
BEGIN
    message := 'Новая игра с ID = ' || NEW.game_id || ' и названием = ' || NEW.name || ' была добавлена в таблицу.';

    PERFORM post_message_in_log(message);

    RETURN NEW;
END;
$$ LANGUAGE plpgsql;
**************************

********* ЗАПРОС *********
CREATE TRIGGER insert_new_game_trigger
AFTER INSERT ON Games
FOR EACH ROW
EXECUTE FUNCTION log_inserted_game();
**************************

********* ЗАПРОС *********
CREATE OR REPLACE FUNCTION log_updated_game_data()
RETURNS TRIGGER AS $$
DECLARE
    message VARCHAR(250);
BEGIN
    message := 'Данные об игре с ID = ' || OLD.game_id || ' были обновлены.';

    IF OLD.name <> NEW.name THEN
        message := message || ' Изменено название игры: ' || OLD.name || ' -> ' || NEW.name || '.';
    END IF;

    IF OLD.category_id <> NEW.category_id THEN
        message := message || ' Изменен жанр игры: ' || OLD.category_id || ' -> ' || NEW.category_id || '.';
    END IF;

    IF OLD.cost <> NEW.cost THEN
        message := message || ' Изменена стоимость игры: ' || OLD.cost || ' -> ' || NEW.cost || '.';
    END IF;

    PERFORM post_message_in_log(message);

    RETURN NEW;
END;
$$ LANGUAGE plpgsql;
**************************

CREATE FUNCTION
********* ЗАПРОС *********
CREATE TRIGGER update_game_trigger
AFTER UPDATE ON Games
FOR EACH ROW
EXECUTE FUNCTION log_updated_game_data();
**************************

********* ЗАПРОС *********
CREATE OR REPLACE FUNCTION log_deleted_game()
RETURNS TRIGGER AS $$
DECLARE
    message VARCHAR(250);
BEGIN
    message := 'Игра с ID = ' || OLD.game_id || ' и названием = ' || OLD.name || ' была удалена.';

    PERFORM post_message_in_log(message);

    RETURN OLD;
END;
$$ LANGUAGE plpgsql;
**************************

CREATE FUNCTION
********* ЗАПРОС *********
CREATE TRIGGER delete_game_trigger
AFTER DELETE ON Games
FOR EACH ROW
EXECUTE FUNCTION log_deleted_game();
**************************

********* ЗАПРОС *********
CREATE OR REPLACE FUNCTION log_inserted_user()
RETURNS TRIGGER AS $$
DECLARE
    message VARCHAR(250);
BEGIN
    message := 'Новый пользователь с ID = ' || NEW.user_id || ' и именем = ' || NEW.nickname || ' был добавлен в таблицу.';

    PERFORM post_message_in_log(message);

    RETURN NEW;
END;
$$ LANGUAGE plpgsql;
**************************

CREATE FUNCTION
********* ЗАПРОС *********
CREATE OR REPLACE TRIGGER insert_new_user_trigger
AFTER INSERT ON Users
FOR EACH ROW
EXECUTE FUNCTION log_inserted_user();
**************************

CREATE TRIGGER
********* ЗАПРОС *********
CREATE OR REPLACE FUNCTION log_updated_user_data()
RETURNS TRIGGER AS $$
DECLARE
    message VARCHAR(250);
BEGIN
    message := 'Данные пользователя с ID = ' || OLD.user_id || ' были обновлены.';

    IF OLD.nickname <> NEW.nickname THEN
        message := message || ' Изменено имя пользователя: ' || OLD.nickname || ' -> ' || NEW.nickname || '.';
    END IF;

    IF OLD.email <> NEW.email THEN
        message := message || ' Изменен адрес электронной почты: ' || OLD.email || ' -> ' || NEW.email || '.';
    END IF;

    IF OLD.balance <> NEW.balance THEN
        message := message || ' Пополнен баланс пользователя: ' || OLD.balance || ' -> ' || NEW.balance || '.';
    END IF;

    PERFORM post_message_in_log(message);

    RETURN NEW;
END;
$$ LANGUAGE plpgsql;
**************************

CREATE FUNCTION
********* ЗАПРОС *********
CREATE OR REPLACE TRIGGER update_user_trigger
AFTER UPDATE ON Users
FOR EACH ROW
EXECUTE FUNCTION log_updated_user_data();
**************************

CREATE TRIGGER
********* ЗАПРОС *********
CREATE OR REPLACE FUNCTION log_deleted_user()
RETURNS TRIGGER AS $$
DECLARE
    message VARCHAR(250);
BEGIN
    message := 'Пользователь с ID = ' || OLD.user_id || ' и именем = ' || OLD.nickname || ' был удален.';

    PERFORM post_message_in_log(message);

    RETURN OLD;
END;
$$ LANGUAGE plpgsql;
**************************

CREATE FUNCTION
********* ЗАПРОС *********
CREATE OR REPLACE TRIGGER delete_user_trigger
AFTER DELETE ON Users
FOR EACH ROW
EXECUTE FUNCTION log_deleted_user();
**************************

CREATE TRIGGER
********* ЗАПРОС *********
CREATE OR REPLACE FUNCTION log_inserted_game()
RETURNS TRIGGER AS $$
DECLARE
    message VARCHAR(250);
BEGIN
    message := 'Новая игра с ID = ' || NEW.game_id || ' и названием = ' || NEW.name || ' была добавлена в таблицу.';

    PERFORM post_message_in_log(message);

    RETURN NEW;
END;
$$ LANGUAGE plpgsql;
**************************

CREATE FUNCTION
********* ЗАПРОС *********
CREATE TRIGGER insert_new_game_trigger
AFTER INSERT ON Games
FOR EACH ROW
EXECUTE FUNCTION log_inserted_game();
**************************

********* ЗАПРОС *********
CREATE OR REPLACE FUNCTION log_inserted_game()
RETURNS TRIGGER AS $$
DECLARE
    message VARCHAR(250);
BEGIN
    message := 'Новая игра с ID = ' || NEW.game_id || ' и названием = ' || NEW.name || ' была добавлена в таблицу.';

    PERFORM post_message_in_log(message);

    RETURN NEW;
END;
$$ LANGUAGE plpgsql;
**************************

CREATE FUNCTION
********* ЗАПРОС *********
CREATE OR REPLACE TRIGGER insert_new_game_trigger
AFTER INSERT ON Games
FOR EACH ROW
EXECUTE FUNCTION log_inserted_game();
**************************

CREATE TRIGGER
********* ЗАПРОС *********
CREATE OR REPLACE FUNCTION log_updated_game_data()
RETURNS TRIGGER AS $$
DECLARE
    message VARCHAR(250);
BEGIN
    message := 'Данные об игре с ID = ' || OLD.game_id || ' были обновлены.';

    IF OLD.name <> NEW.name THEN
        message := message || ' Изменено название игры: ' || OLD.name || ' -> ' || NEW.name || '.';
    END IF;

    IF OLD.category_id <> NEW.category_id THEN
        message := message || ' Изменен жанр игры: ' || OLD.category_id || ' -> ' || NEW.category_id || '.';
    END IF;

    IF OLD.cost <> NEW.cost THEN
        message := message || ' Изменена стоимость игры: ' || OLD.cost || ' -> ' || NEW.cost || '.';
    END IF;

    PERFORM post_message_in_log(message);

    RETURN NEW;
END;
$$ LANGUAGE plpgsql;
**************************

CREATE FUNCTION
********* ЗАПРОС *********
CREATE OR REPLACE TRIGGER update_game_trigger
AFTER UPDATE ON Games
FOR EACH ROW
EXECUTE FUNCTION log_updated_game_data();
**************************

CREATE TRIGGER
********* ЗАПРОС *********
CREATE OR REPLACE FUNCTION log_deleted_game()
RETURNS TRIGGER AS $$
DECLARE
    message VARCHAR(250);
BEGIN
    message := 'Игра с ID = ' || OLD.game_id || ' и названием = ' || OLD.name || ' была удалена.';

    PERFORM post_message_in_log(message);

    RETURN OLD;
END;
$$ LANGUAGE plpgsql;
**************************

CREATE FUNCTION
********* ЗАПРОС *********
CREATE TRIGGER delete_game_trigger
AFTER DELETE ON Games
FOR EACH ROW
EXECUTE FUNCTION log_deleted_game();
**************************

********* ЗАПРОС *********
CREATE OR REPLACE TRIGGER update_game_trigger
AFTER UPDATE ON Games
FOR EACH ROW
EXECUTE FUNCTION log_updated_game_data();
**************************

CREATE TRIGGER
********* ЗАПРОС *********
CREATE OR REPLACE FUNCTION log_deleted_game()
RETURNS TRIGGER AS $$
DECLARE
    message VARCHAR(250);
BEGIN
    message := 'Игра с ID = ' || OLD.game_id || ' и названием = ' || OLD.name || ' была удалена.';

    PERFORM post_message_in_log(message);

    RETURN OLD;
END;
$$ LANGUAGE plpgsql;
**************************

CREATE FUNCTION
********* ЗАПРОС *********
CREATE OR REPLACE TRIGGER delete_game_trigger
AFTER DELETE ON Games
FOR EACH ROW
EXECUTE FUNCTION log_deleted_game();
**************************

CREATE TRIGGER
********* ЗАПРОС *********
drop FUNCTION log_inserted_game();
**************************

********* ЗАПРОС *********
drop TRIGGER insert_new_game_trigger on games;
**************************

DROP TRIGGER
********* ЗАПРОС *********
drop TRIGGER update_game_trigger on games;
**************************

DROP TRIGGER
********* ЗАПРОС *********
drop TRIGGER delete_game_trigger on games;
**************************

DROP TRIGGER
********* ЗАПРОС *********
drop FUNCTION log_inserted_game();
**************************

DROP FUNCTION
********* ЗАПРОС *********
drop TRIGGER delete_user_trigger on users;
**************************

DROP TRIGGER
********* ЗАПРОС *********
drop FUNCTION log_deleted_user();
**************************

DROP FUNCTION
********* ЗАПРОС *********
CREATE OR REPLACE FUNCTION post_message_in_log(message_param character varying(250), user_id_param INT)
RETURNS VOID AS $$
BEGIN
    INSERT INTO user_logs (user_id, date_of_event, message)
    VALUES (user_id_param, CURRENT_DATE, message_param);
END;
$$ LANGUAGE plpgsql;
**************************

CREATE FUNCTION
********* ЗАПРОС *********
CREATE OR REPLACE FUNCTION log_inserted_user()
RETURNS TRIGGER AS $$
DECLARE
    message VARCHAR(250);
BEGIN
    message := 'Новый пользователь с ID = ' || NEW.user_id || ' и именем = ' || NEW.nickname || ' был добавлен в таблицу.';

    PERFORM post_message_in_log(NEW.user_id, message);

    RETURN NEW;
END;
$$ LANGUAGE plpgsql;
**************************

CREATE FUNCTION
********* ЗАПРОС *********
CREATE OR REPLACE TRIGGER insert_new_user_trigger
AFTER INSERT ON Users
FOR EACH ROW
EXECUTE FUNCTION log_inserted_user();
**************************

CREATE TRIGGER
********* ЗАПРОС *********
CREATE OR REPLACE FUNCTION log_updated_user_data()
RETURNS TRIGGER AS $$
DECLARE
    message VARCHAR(250);
BEGIN
    message := 'Данные пользователя с ID = ' || OLD.user_id || ' были обновлены.';

    IF OLD.nickname <> NEW.nickname THEN
        message := message || ' Изменено имя пользователя: ' || OLD.nickname || ' -> ' || NEW.nickname || '.';
    END IF;

    IF OLD.email <> NEW.email THEN
        message := message || ' Изменен адрес электронной почты: ' || OLD.email || ' -> ' || NEW.email || '.';
    END IF;

    IF OLD.balance <> NEW.balance THEN
        message := message || ' Пополнен баланс пользователя: ' || OLD.balance || ' -> ' || NEW.balance || '.';
    END IF;

    PERFORM post_message_in_log(NEW.user_id, message);

    RETURN NEW;
END;
$$ LANGUAGE plpgsql;
**************************

CREATE FUNCTION
********* ЗАПРОС *********
CREATE OR REPLACE TRIGGER update_user_trigger
AFTER UPDATE ON Users
FOR EACH ROW
EXECUTE FUNCTION log_updated_user_data();
**************************

CREATE TRIGGER
********* ЗАПРОС *********
CREATE OR REPLACE FUNCTION add_money_to_user_balance()
RETURNS TRIGGER AS $$
DECLARE
    amount DECIMAL;
BEGIN
    amount := NEW.amount;

    UPDATE Users SET balance = balance + NEW.amount
    WHERE user_id = NEW.user_id;

    RETURN NEW;
END;
$$ LANGUAGE plpgsql;
**************************

CREATE FUNCTION
********* ЗАПРОС *********
CREATE OR REPLACE TRIGGER update_balance_of_user
AFTER UPDATE ON Payments
FOR EACH ROW
EXECUTE FUNCTION add_money_to_user_balance();
**************************

CREATE TRIGGER
********* ЗАПРОС *********
CREATE OR REPLACE FUNCTION add_money_to_user_balance()
RETURNS TRIGGER AS $$
DECLARE
    amount DECIMAL;
BEGIN
    amount := NEW.amount;

    UPDATE Users SET balance = balance + NEW.amount
    WHERE user_id = NEW.user_id;

    RETURN NEW;
END;
$$ LANGUAGE plpgsql;
**************************

CREATE FUNCTION
********* ЗАПРОС *********
CREATE OR REPLACE TRIGGER update_balance_of_user
AFTER UPDATE ON Payments
FOR EACH ROW
EXECUTE FUNCTION add_money_to_user_balance();
**************************

CREATE TRIGGER
********* ЗАПРОС *********
CREATE OR REPLACE FUNCTION pay_for_order(user_id_param INT, order_id_param INT)
RETURNS VOID AS $$
BEGIN
    -- Создаем новую строку в таблице Orders для пользователя
    INSERT INTO Orders (user_id, order_date, status, amount)
    VALUES (user_id_param, CURRENT_DATE, 'Заказ ждет оплаты', 0)
    RETURNING order_id INTO new_order_id;

    -- Переносим игры из заказа пользователя в таблицу Libraries
    INSERT INTO Libraries (game_id, user_id)
    SELECT game_id, user_id AS user_id_param
    FROM Orders_Games
    WHERE order_id = order_id_param;

    UPDATE Orders SET status = 'Заказ был оплачен пользователем и игры уже хранятся в его библиотеке'
    WHERE order_id = order_id_param;
     
    UPDATE Users SET balance = balance - (SELECT amount FROM Orders WHERE order_id = order_id_param)
    WHERE user_id = user_id_param;
END;
$$ LANGUAGE plpgsql;
**************************

********* ЗАПРОС *********
CREATE OR REPLACE FUNCTION pay_for_order(user_id_param INT, order_id_param INT)
RETURNS VOID AS $$
BEGIN
    -- Переносим игры из заказа пользователя в таблицу Libraries
    INSERT INTO Libraries (game_id, user_id)
    SELECT game_id, user_id AS user_id_param
    FROM Orders_Games
    WHERE order_id = order_id_param;

    UPDATE Orders SET status = 'Заказ был оплачен пользователем и игры уже хранятся в его библиотеке'
    WHERE order_id = order_id_param;
     
    UPDATE Users SET balance = balance - (SELECT amount FROM Orders WHERE order_id = order_id_param)
    WHERE user_id = user_id_param;
END;
$$ LANGUAGE plpgsql;
**************************

CREATE FUNCTION
********* ЗАПРОС *********
CREATE OR REPLACE FUNCTION add_game_to_carts(game_id_param INT, user_id_param INT)
RETURNS BOOLEAN AS $$
DECLARE
    game_exists BOOLEAN;
BEGIN
    SELECT EXISTS (
        SELECT 1
        FROM Libraries
        WHERE game_id = game_id_param
        LIMIT 1
    ) INTO game_exists;

    IF game_exists THEN
        RETURN false;
    ELSE
        INSERT INTO Carts (game_id, user_id)
        VALUES (game_id_param, user_id_param);
        RETURN true;
    END IF;
END;
$$ LANGUAGE plpgsql;
**************************

CREATE FUNCTION
********* ЗАПРОС *********
select * from orders
;
**************************

 order_id | user_id | order_date |        status        | amount 
----------+---------+------------+----------------------+--------
        6 |       2 | 2023-10-30 | Заказ не сформирован |    0.0
        5 |       1 | 2023-10-30 | Заказ не сформирован |       
        7 |      11 | 2023-10-30 | Заказ ждет оплаты    |  39.99
        8 |      11 | 2023-10-31 | Заказ не сформирован |  79.98
       10 |      16 | 2023-11-21 | Заказ ждет оплаты    |  49.98
(5 строк)

********* ЗАПРОС *********
Select add_game_to_carts(2, 5);
**************************

 add_game_to_carts 
-------------------
 t
(1 строка)

********* ЗАПРОС *********
Select add_game_to_carts(2, 5);
**************************

********* ЗАПРОС *********
Select add_game_to_carts(3, 5);
**************************

 add_game_to_carts 
-------------------
 f
(1 строка)

********* ЗАПРОС *********
select * from libraries;
**************************

 game_id | user_id 
---------+---------
       1 |       1
       1 |       2
       1 |       3
       3 |      15
      10 |      15
       9 |      15
(6 строк)

********* ЗАПРОС *********
CREATE OR REPLACE FUNCTION add_game_to_carts(game_id_param INT, user_id_param INT)
RETURNS BOOLEAN AS $$
DECLARE
    game_exists BOOLEAN;
BEGIN
    SELECT EXISTS (
        SELECT 1
        FROM Libraries
        WHERE game_id = game_id_param AND user_id = user_id_param
        LIMIT 1
    ) INTO game_exists;

    IF game_exists THEN
        RETURN false;
    ELSE
        INSERT INTO Carts (game_id, user_id)
        VALUES (game_id_param, user_id_param);
        RETURN true;
    END IF;
END;
$$ LANGUAGE plpgsql;
**************************

CREATE FUNCTION
********* ЗАПРОС *********
Select add_game_to_carts(3, 5);
**************************

 add_game_to_carts 
-------------------
 t
(1 строка)

********* ЗАПРОС *********
select * from carts;
**************************

 game_id | user_id 
---------+---------
       1 |       5
       1 |       6
       1 |       9
       3 |      16
      10 |      16
       9 |      16
       2 |       5
       3 |       5
(8 строк)

********* ЗАПРОС *********
select create_order_from_cart(5);
**************************

 create_order_from_cart 
------------------------
 
(1 строка)

********* ЗАПРОС *********
select * from orders_games
;
**************************

 game_id | order_id 
---------+----------
       1 |        7
       3 |        7
       4 |        8
       6 |        8
       3 |       10
      10 |       10
       9 |       10
       1 |       11
       2 |       11
       3 |       11
(10 строк)

********* ЗАПРОС *********
select * from orders
;
**************************

 order_id | user_id | order_date |        status        | amount 
----------+---------+------------+----------------------+--------
        6 |       2 | 2023-10-30 | Заказ не сформирован |    0.0
        5 |       1 | 2023-10-30 | Заказ не сформирован |       
        7 |      11 | 2023-10-30 | Заказ ждет оплаты    |  39.99
        8 |      11 | 2023-10-31 | Заказ не сформирован |  79.98
       10 |      16 | 2023-11-21 | Заказ ждет оплаты    |  49.98
       11 |       5 | 2023-11-21 | Заказ ждет оплаты    |  59.98
(6 строк)

********* ЗАПРОС *********
update users set balance = 100.0 where user_id = 5;
**************************

********* ЗАПРОС *********
CREATE OR REPLACE FUNCTION post_message_in_log(message_param character varying(250), user_id_param INT)
RETURNS VOID AS $$
BEGIN
    INSERT INTO user_logs (user_id, date_of_event, message)
    VALUES (user_id_param, CURRENT_DATE, message_param);
END;
$$ LANGUAGE plpgsql;
**************************

CREATE FUNCTION
********* ЗАПРОС *********
update users set balance = 100.0 where user_id = 5;
**************************

********* ЗАПРОС *********
CREATE OR REPLACE FUNCTION post_message_in_log(message_param character varying, user_id_param INT)
RETURNS VOID AS $$
BEGIN
    INSERT INTO user_logs (user_id, date_of_event, message)
    VALUES (user_id_param, CURRENT_DATE, message_param);
END;
$$ LANGUAGE plpgsql;
**************************

CREATE FUNCTION
********* ЗАПРОС *********
update users set balance = 100.0 where user_id = 5;
**************************

********* ЗАПРОС *********
CREATE OR REPLACE FUNCTION post_message_in_log(message_param VARCHAR(250), user_id_param INT)
RETURNS VOID AS $$
BEGIN
    INSERT INTO user_logs (user_id, date_of_event, message)
    VALUES (user_id_param, CURRENT_DATE, message_param);
END;
$$ LANGUAGE plpgsql;
**************************

CREATE FUNCTION
********* ЗАПРОС *********
update users set balance = 100.0 where user_id = 5;
**************************

********* ЗАПРОС *********
CREATE OR REPLACE FUNCTION post_message_in_log(user_id_param INT, message_param VARCHAR(250))
RETURNS VOID AS $$
BEGIN
    INSERT INTO user_logs (user_id, date_of_event, message)
    VALUES (user_id_param, CURRENT_DATE, message_param);
END;
$$ LANGUAGE plpgsql;
**************************

CREATE FUNCTION
********* ЗАПРОС *********
update users set balance = 100.0 where user_id = 5;
**************************

********* ЗАПРОС *********
CREATE OR REPLACE FUNCTION post_message_in_log(user_id_param INT, message_param VARCHAR(250))
RETURNS VOID AS $$
BEGIN
    INSERT INTO user_logs (user_id, date_of_event, description)
    VALUES (user_id_param, CURRENT_DATE, message_param);
END;
$$ LANGUAGE plpgsql;
**************************

CREATE FUNCTION
********* ЗАПРОС *********
update users set balance = 100.0 where user_id = 5;
**************************

UPDATE 1
********* ЗАПРОС *********
Select pay_for_order(5, 11);
**************************

********* ЗАПРОС *********
CREATE OR REPLACE FUNCTION pay_for_order(user_id_param INT, order_id_param INT)
RETURNS VOID AS $$
BEGIN
    -- Переносим игры из заказа пользователя в таблицу Libraries
    INSERT INTO Libraries (game_id, user_id)
    SELECT game_id, user_id_param AS user_id
    FROM Orders_Games
    WHERE order_id = order_id_param;

    UPDATE Orders SET status = 'Заказ был оплачен пользователем и игры уже хранятся в его библиотеке'
    WHERE order_id = order_id_param;
     
    UPDATE Users SET balance = balance - (SELECT amount FROM Orders WHERE order_id = order_id_param)
    WHERE user_id = user_id_param;
END;
$$ LANGUAGE plpgsql;
**************************

CREATE FUNCTION
********* ЗАПРОС *********
Select pay_for_order(5, 11);
**************************

********* ЗАПРОС *********
CREATE OR REPLACE FUNCTION pay_for_order(user_id_param INT, order_id_param INT)
RETURNS VOID AS $$
BEGIN
    -- Переносим игры из заказа пользователя в таблицу Libraries
    INSERT INTO Libraries (game_id, user_id)
    SELECT game_id, user_id_param AS user_id
    FROM Orders_Games
    WHERE order_id = order_id_param;

    UPDATE Orders SET status = 'Заказ был оплачен пользователем'
    WHERE order_id = order_id_param;
     
    UPDATE Users SET balance = balance - (SELECT amount FROM Orders WHERE order_id = order_id_param)
    WHERE user_id = user_id_param;
END;
$$ LANGUAGE plpgsql;
**************************

CREATE FUNCTION
********* ЗАПРОС *********
Select pay_for_order(5, 11);
**************************

 pay_for_order 
---------------
 
(1 строка)

********* ЗАПРОС *********
select * from libraries where user_id = 5
;
**************************

 game_id | user_id 
---------+---------
       1 |       5
       2 |       5
       3 |       5
(3 строки)

********* ЗАПРОС *********
Select add_game_to_carts(2, 5);
**************************

 add_game_to_carts 
-------------------
 f
(1 строка)

********* ЗАПРОС *********
Select add_game_to_carts(2, 5);
**************************

 add_game_to_carts 
-------------------
 f
(1 строка)

********* ЗАПРОС *********
CREATE OR REPLACE FUNCTION pay_for_order(user_id_param INT, order_id_param INT)
RETURNS BOOLEAN AS $$
DECLARE
    total_amount DECIMAL;
BEGIN
    -- Получаем общую сумму заказа
    SELECT amount INTO total_amount
    FROM Orders
    WHERE order_id = order_id_param;

    -- Проверяем, достаточно ли средств у пользователя
    IF (SELECT balance FROM Users WHERE user_id = user_id_param) >= total_amount THEN
        -- Если достаточно средств, выполняем операции
        INSERT INTO Libraries (game_id, user_id)
        SELECT game_id, user_id_param AS user_id
        FROM Orders_Games
        WHERE order_id = order_id_param;

        UPDATE Orders SET status = 'Заказ был оплачен пользователем'
        WHERE order_id = order_id_param;

        UPDATE Users SET balance = balance - total_amount
        WHERE user_id = user_id_param;

        RETURN true;
    ELSE
        -- Если недостаточно средств, возвращаем false
        RETURN false;
    END IF;
END;
$$ LANGUAGE plpgsql;
**************************

********* ЗАПРОС *********
DROP FUNCTION pay_for_order(integer,integer)
;
**************************

DROP FUNCTION
********* ЗАПРОС *********
CREATE OR REPLACE FUNCTION pay_for_order(user_id_param INT, order_id_param INT)
RETURNS BOOLEAN AS $$
DECLARE
    total_amount DECIMAL;
BEGIN
    -- Получаем общую сумму заказа
    SELECT amount INTO total_amount
    FROM Orders
    WHERE order_id = order_id_param;

    -- Проверяем, достаточно ли средств у пользователя
    IF (SELECT balance FROM Users WHERE user_id = user_id_param) >= total_amount THEN
        -- Если достаточно средств, выполняем операции
        INSERT INTO Libraries (game_id, user_id)
        SELECT game_id, user_id_param AS user_id
        FROM Orders_Games
        WHERE order_id = order_id_param;

        UPDATE Orders SET status = 'Заказ был оплачен пользователем'
        WHERE order_id = order_id_param;

        UPDATE Users SET balance = balance - total_amount
        WHERE user_id = user_id_param;

        RETURN true;
    ELSE
        -- Если недостаточно средств, возвращаем false
        RETURN false;
    END IF;
END;
$$ LANGUAGE plpgsql;
**************************

CREATE FUNCTION
********* ЗАПРОС *********
select * from triggers
;
**************************

********* ЗАПРОС *********
84;
**************************

********* ЗАПРОС *********
6u
SELECT trigger_name, event_object_table, action_timing, event_manipulation, action_statement
FROM information_schema.triggers
WHERE trigger_schema NOT IN ('pg_catalog', 'information_schema');
**************************

********* ЗАПРОС *********
SELECT trigger_name, event_object_table, action_timing, event_manipulation, action_statement
FROM information_schema.triggers
WHERE trigger_schema NOT IN ('pg_catalog', 'information_schema');
**************************

        trigger_name         | event_object_table | action_timing | event_manipulation |                    action_statement                     
-----------------------------+--------------------+---------------+--------------------+---------------------------------------------------------
 update_sum_of_order_trigger | orders_games       | AFTER         | INSERT             | EXECUTE FUNCTION update_sum_of_order_trigger_function()
 insert_new_user_trigger     | users              | AFTER         | INSERT             | EXECUTE FUNCTION log_inserted_user()
 update_user_trigger         | users              | AFTER         | UPDATE             | EXECUTE FUNCTION log_updated_user_data()
 update_balance_of_user      | payments           | AFTER         | UPDATE             | EXECUTE FUNCTION add_money_to_user_balance()
(4 строки)

********* ЗАПРОС *********
SELECT routine_name, routine_definition
FROM information_schema.routines
WHERE routine_schema NOT IN ('pg_catalog', 'information_schema')
    AND routine_type = 'FUNCTION';
**************************

             routine_name             |                                                     routine_definition                                                      
--------------------------------------+-----------------------------------------------------------------------------------------------------------------------------
 create_order_from_cart               |                                                                                                                            +
                                      | DECLARE                                                                                                                    +
                                      |     new_order_id INT;                                                                                                      +
                                      | BEGIN                                                                                                                      +
                                      |     -- Создаем новую строку в таблице Orders для пользователя                                                              +
                                      |     INSERT INTO Orders (user_id, order_date, status, amount)                                                               +
                                      |     VALUES (user_id_param, CURRENT_DATE, 'Заказ ждет оплаты', 0)                                                           +
                                      |     RETURNING order_id INTO new_order_id;                                                                                  +
                                      |                                                                                                                            +
                                      |     -- Переносим игры из корзины пользователя в таблицу Orders_Games                                                       +
                                      |     INSERT INTO Orders_Games (game_id, order_id)                                                                           +
                                      |     SELECT game_id, new_order_id                                                                                           +
                                      |     FROM Carts                                                                                                             +
                                      |     WHERE user_id = user_id_param;                                                                                         +
                                      | END;                                                                                                                       +
                                      | 
 update_sum_of_order_trigger_function |                                                                                                                            +
                                      | BEGIN                                                                                                                      +
                                      |     UPDATE Orders                                                                                                          +
                                      |     SET amount = amount + (SELECT cost FROM Games WHERE game_id = NEW.game_id)                                             +
                                      |     WHERE order_id = NEW.order_id;                                                                                         +
                                      |     RETURN NEW;                                                                                                            +
                                      | END;                                                                                                                       +
                                      | 
 get_avg_rating_of_game               |                                                                                                                            +
                                      | DECLARE avg_rating DECIMAL;                                                                                                +
                                      | BEGIN                                                                                                                      +
                                      |     SELECT AVG(rating) INTO avg_rating                                                                                     +
                                      |     FROM Reviews                                                                                                           +
                                      |     WHERE game_id = game_id_param;                                                                                         +
                                      |                                                                                                                            +
                                      |     RETURN avg_rating;                                                                                                     +
                                      | END;                                                                                                                       +
                                      | 
 add_money_to_user_balance            |                                                                                                                            +
                                      | DECLARE                                                                                                                    +
                                      |     amount DECIMAL;                                                                                                        +
                                      | BEGIN                                                                                                                      +
                                      |     amount := NEW.amount;                                                                                                  +
                                      |                                                                                                                            +
                                      |     UPDATE Users SET balance = balance + NEW.amount                                                                        +
                                      |     WHERE user_id = NEW.user_id;                                                                                           +
                                      |                                                                                                                            +
                                      |     RETURN NEW;                                                                                                            +
                                      | END;                                                                                                                       +
                                      | 
 log_deleted_game                     |                                                                                                                            +
                                      | DECLARE                                                                                                                    +
                                      |     message VARCHAR(250);                                                                                                  +
                                      | BEGIN                                                                                                                      +
                                      |     message := 'Игра с ID = ' || OLD.game_id || ' и названием = ' || OLD.name || ' была удалена.';                         +
                                      |                                                                                                                            +
                                      |     PERFORM post_message_in_log(message);                                                                                  +
                                      |                                                                                                                            +
                                      |     RETURN OLD;                                                                                                            +
                                      | END;                                                                                                                       +
                                      | 
 post_message_in_log                  |                                                                                                                            +
                                      | BEGIN                                                                                                                      +
                                      |     RAISE NOTICE '%', message_param;                                                                                       +
                                      | END;                                                                                                                       +
                                      | 
 log_inserted_user                    |                                                                                                                            +
                                      | DECLARE                                                                                                                    +
                                      |     message VARCHAR(250);                                                                                                  +
                                      | BEGIN                                                                                                                      +
                                      |     message := 'Новый пользователь с ID = ' || NEW.user_id || ' и именем = ' || NEW.nickname || ' был добавлен в таблицу.';+
                                      |                                                                                                                            +
                                      |     PERFORM post_message_in_log(NEW.user_id, message);                                                                     +
                                      |                                                                                                                            +
                                      |     RETURN NEW;                                                                                                            +
                                      | END;                                                                                                                       +
                                      | 
 log_updated_user_data                |                                                                                                                            +
                                      | DECLARE                                                                                                                    +
                                      |     message VARCHAR(250);                                                                                                  +
                                      | BEGIN                                                                                                                      +
                                      |     message := 'Данные пользователя с ID = ' || OLD.user_id || ' были обновлены.';                                         +
                                      |                                                                                                                            +
                                      |     IF OLD.nickname <> NEW.nickname THEN                                                                                   +
                                      |         message := message || ' Изменено имя пользователя: ' || OLD.nickname || ' -> ' || NEW.nickname || '.';             +
                                      |     END IF;                                                                                                                +
                                      |                                                                                                                            +
                                      |     IF OLD.email <> NEW.email THEN                                                                                         +
                                      |         message := message || ' Изменен адрес электронной почты: ' || OLD.email || ' -> ' || NEW.email || '.';             +
                                      |     END IF;                                                                                                                +
                                      |                                                                                                                            +
                                      |     IF OLD.balance <> NEW.balance THEN                                                                                     +
                                      |         message := message || ' Пополнен баланс пользователя: ' || OLD.balance || ' -> ' || NEW.balance || '.';            +
                                      |     END IF;                                                                                                                +
                                      |                                                                                                                            +
                                      |     PERFORM post_message_in_log(NEW.user_id, message);                                                                     +
                                      |                                                                                                                            +
                                      |     RETURN NEW;                                                                                                            +
                                      | END;                                                                                                                       +
                                      | 
 log_updated_game_data                |                                                                                                                            +
                                      | DECLARE                                                                                                                    +
                                      |     message VARCHAR(250);                                                                                                  +
                                      | BEGIN                                                                                                                      +
                                      |     message := 'Данные об игре с ID = ' || OLD.game_id || ' были обновлены.';                                              +
                                      |                                                                                                                            +
                                      |     IF OLD.name <> NEW.name THEN                                                                                           +
                                      |         message := message || ' Изменено название игры: ' || OLD.name || ' -> ' || NEW.name || '.';                        +
                                      |     END IF;                                                                                                                +
                                      |                                                                                                                            +
                                      |     IF OLD.category_id <> NEW.category_id THEN                                                                             +
                                      |         message := message || ' Изменен жанр игры: ' || OLD.category_id || ' -> ' || NEW.category_id || '.';               +
                                      |     END IF;                                                                                                                +
                                      |                                                                                                                            +
                                      |     IF OLD.cost <> NEW.cost THEN                                                                                           +
                                      |         message := message || ' Изменена стоимость игры: ' || OLD.cost || ' -> ' || NEW.cost || '.';                       +
                                      |     END IF;                                                                                                                +
                                      |                                                                                                                            +
                                      |     PERFORM post_message_in_log(message);                                                                                  +
                                      |                                                                                                                            +
                                      |     RETURN NEW;                                                                                                            +
                                      | END;                                                                                                                       +
                                      | 
 add_game_to_carts                    |                                                                                                                            +
                                      | DECLARE                                                                                                                    +
                                      |     game_exists BOOLEAN;                                                                                                   +
                                      | BEGIN                                                                                                                      +
                                      |     SELECT EXISTS (                                                                                                        +
                                      |         SELECT 1                                                                                                           +
                                      |         FROM Libraries                                                                                                     +
                                      |         WHERE game_id = game_id_param AND user_id = user_id_param                                                          +
                                      |         LIMIT 1                                                                                                            +
                                      |     ) INTO game_exists;                                                                                                    +
                                      |                                                                                                                            +
                                      |     IF game_exists THEN                                                                                                    +
                                      |         RETURN false;                                                                                                      +
                                      |     ELSE                                                                                                                   +
                                      |         INSERT INTO Carts (game_id, user_id)                                                                               +
                                      |         VALUES (game_id_param, user_id_param);                                                                             +
                                      |         RETURN true;                                                                                                       +
                                      |     END IF;                                                                                                                +
                                      | END;                                                                                                                       +
                                      | 
 post_message_in_log                  |                                                                                                                            +
                                      | BEGIN                                                                                                                      +
                                      |     INSERT INTO user_logs (user_id, date_of_event, message)                                                                +
                                      |     VALUES (user_id_param, CURRENT_DATE, message_param);                                                                   +
                                      | END;                                                                                                                       +
                                      | 
 post_message_in_log                  |                                                                                                                            +
                                      | BEGIN                                                                                                                      +
                                      |     INSERT INTO user_logs (user_id, date_of_event, description)                                                            +
                                      |     VALUES (user_id_param, CURRENT_DATE, message_param);                                                                   +
                                      | END;                                                                                                                       +
                                      | 
 pay_for_order                        |                                                                                                                            +
                                      | DECLARE                                                                                                                    +
                                      |     total_amount DECIMAL;                                                                                                  +
                                      | BEGIN                                                                                                                      +
                                      |     -- Получаем общую сумму заказа                                                                                         +
                                      |     SELECT amount INTO total_amount                                                                                        +
                                      |     FROM Orders                                                                                                            +
                                      |     WHERE order_id = order_id_param;                                                                                       +
                                      |                                                                                                                            +
                                      |     -- Проверяем, достаточно ли средств у пользователя                                                                     +
                                      |     IF (SELECT balance FROM Users WHERE user_id = user_id_param) >= total_amount THEN                                      +
                                      |         -- Если достаточно средств, выполняем операции                                                                     +
                                      |         INSERT INTO Libraries (game_id, user_id)                                                                           +
                                      |         SELECT game_id, user_id_param AS user_id                                                                           +
                                      |         FROM Orders_Games                                                                                                  +
                                      |         WHERE order_id = order_id_param;                                                                                   +
                                      |                                                                                                                            +
                                      |         UPDATE Orders SET status = 'Заказ был оплачен пользователем'                                                       +
                                      |         WHERE order_id = order_id_param;                                                                                   +
                                      |                                                                                                                            +
                                      |         UPDATE Users SET balance = balance - total_amount                                                                  +
                                      |         WHERE user_id = user_id_param;                                                                                     +
                                      |                                                                                                                            +
                                      |         RETURN true;                                                                                                       +
                                      |     ELSE                                                                                                                   +
                                      |         -- Если недостаточно средств, возвращаем false                                                                     +
                                      |         RETURN false;                                                                                                      +
                                      |     END IF;                                                                                                                +
                                      | END;                                                                                                                       +
                                      | 
(13 строк)

********* ЗАПРОС *********
insert into Users (nickname, password, email, role_id, balance) values ('Dima 2', '$2b$04$EW4zWKiZAPRdqvz/dqb6K.3qA26GLjsT8ZBAQDpb6JFjDEqGxbVuW', 'tfance0@jalbum.net', 1, 109.59);
**************************

********* ЗАПРОС *********
insert into Users (nickname, password, email, role_id, balance) values ('Dima 2', '$2b$04$EW4zWKiZAPRdqvz/dqb6K.3qA26GLjsT8ZBAQDpb6JFjDEqGxbVuW', 'tfance0@jalbum6.net', 1, 109.59);
**************************

INSERT 0 1
********* ЗАПРОС *********
select * from user_logs where user_id = 21;
**************************

 user_log_id | user_id | date_of_event | description 
-------------+---------+---------------+-------------
(0 строк)

********* ЗАПРОС *********
select * from user_logs where user_id = 20;
**************************

 user_log_id | user_id | date_of_event | description 
-------------+---------+---------------+-------------
(0 строк)

********* ЗАПРОС *********
select * from user_logs;
**************************

 user_log_id | user_id | date_of_event |                                        description                                         
-------------+---------+---------------+--------------------------------------------------------------------------------------------
           1 |       5 | 2023-11-21    | Данные пользователя с ID = 5 были обновлены. Пополнен баланс пользователя: 87.45 -> 100.0.
           2 |       5 | 2023-11-21    | Данные пользователя с ID = 5 были обновлены. Пополнен баланс пользователя: 100.0 -> 40.02.
           3 |      22 | 2023-11-21    | Новый пользователь с ID = 22 и именем = Dima 2 был добавлен в таблицу.
(3 строки)

********* ЗАПРОС *********
84;
**************************

********* ЗАПРОС *********
6u
CREATE OR REPLACE FUNCTION log_updated_user_data()
RETURNS TRIGGER AS $$
DECLARE
    message VARCHAR(250);
BEGIN
    message := 'Данные пользователя с ID = ' || OLD.user_id || ' были обновлены.';

    IF OLD.nickname <> NEW.nickname THEN
        message := message || ' Изменено имя пользователя: ' || OLD.nickname || ' -> ' || NEW.nickname || '.';
    END IF;

    IF OLD.email <> NEW.email THEN
        message := message || ' Изменен адрес электронной почты: ' || OLD.email || ' -> ' || NEW.email || '.';
    END IF;

    IF OLD.balance <> NEW.balance THEN
        message := message || ' Изменен баланс пользователя: ' || OLD.balance || ' -> ' || NEW.balance || '.';
    END IF;

    PERFORM post_message_in_log(NEW.user_id, message);

    RETURN NEW;
END;
$$ LANGUAGE plpgsql;
**************************

********* ЗАПРОС *********
CREATE OR REPLACE FUNCTION log_updated_user_data()
RETURNS TRIGGER AS $$
DECLARE
    message VARCHAR(250);
BEGIN
    message := 'Данные пользователя с ID = ' || OLD.user_id || ' были обновлены.';

    IF OLD.nickname <> NEW.nickname THEN
        message := message || ' Изменено имя пользователя: ' || OLD.nickname || ' -> ' || NEW.nickname || '.';
    END IF;

    IF OLD.email <> NEW.email THEN
        message := message || ' Изменен адрес электронной почты: ' || OLD.email || ' -> ' || NEW.email || '.';
    END IF;

    IF OLD.balance <> NEW.balance THEN
        message := message || ' Изменен баланс пользователя: ' || OLD.balance || ' -> ' || NEW.balance || '.';
    END IF;

    PERFORM post_message_in_log(NEW.user_id, message);

    RETURN NEW;
END;
$$ LANGUAGE plpgsql;
**************************

CREATE FUNCTION
********* ЗАПРОС *********
select * from orders;
**************************

 order_id | user_id | order_date |             status              | amount 
----------+---------+------------+---------------------------------+--------
        6 |       2 | 2023-10-30 | Заказ не сформирован            |    0.0
        5 |       1 | 2023-10-30 | Заказ не сформирован            |       
        7 |      11 | 2023-10-30 | Заказ ждет оплаты               |  39.99
        8 |      11 | 2023-10-31 | Заказ не сформирован            |  79.98
       10 |      16 | 2023-11-21 | Заказ ждет оплаты               |  49.98
       11 |       5 | 2023-11-21 | Заказ был оплачен пользователем |  59.98
(6 строк)

********* ЗАПРОС *********
insert into orders_games (game_id, order_id) values (4, 7);
**************************

INSERT 0 1
********* ЗАПРОС *********
select * from orders;
**************************

 order_id | user_id | order_date |             status              | amount 
----------+---------+------------+---------------------------------+--------
        6 |       2 | 2023-10-30 | Заказ не сформирован            |    0.0
        5 |       1 | 2023-10-30 | Заказ не сформирован            |       
        8 |      11 | 2023-10-31 | Заказ не сформирован            |  79.98
       10 |      16 | 2023-11-21 | Заказ ждет оплаты               |  49.98
       11 |       5 | 2023-11-21 | Заказ был оплачен пользователем |  59.98
        7 |      11 | 2023-10-30 | Заказ ждет оплаты               |  69.98
(6 строк)

********* ЗАПРОС *********
select * from libraries where user_id = 5;
**************************

 game_id | user_id 
---------+---------
       1 |       5
       2 |       5
       3 |       5
(3 строки)

********* ЗАПРОС *********
select add_game_to_carts(2, 5);
**************************

 add_game_to_carts 
-------------------
 f
(1 строка)

********* ЗАПРОС *********
select add_game_to_carts(6, 5);
**************************

 add_game_to_carts 
-------------------
 t
(1 строка)

